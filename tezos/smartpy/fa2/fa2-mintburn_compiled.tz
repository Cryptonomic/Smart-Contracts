parameter (or (or (or (pair %balance_of (list %requests (pair (address %owner) (nat %token_id))) (contract %callback (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))) (list %burn (pair (address %address) (pair (nat %amount) (nat %token_id))))) (or (list %mint (pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)))) (address %set_administrator))) (or (or (bool %set_pause) (pair %token_metadata (list %token_ids nat) (lambda %handler (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit))) (or (contract %token_metadata_registry address) (or (list %transfer (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) (list %update_operators (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))))));
storage   (pair (pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))));
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%balance_of
                # == balance_of ==
                # sp.verify(~ self.data.paused) # @storage : @parameter%balance_of
                DUP;        # @storage : @storage : @parameter%balance_of
                DUG 2;      # @storage : @parameter%balance_of : @storage
                CDDAR;      # bool : @parameter%balance_of : @storage
                IF
                  {
                    PUSH int 481; # int : @parameter%balance_of : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%balance_of : @storage
                # def f0(lparams_0):
                #   sp.verify(self.data.tokens.contains(lparams_0.token_id), message = 'FA2_TOKEN_UNDEFINED')
                #   sp.if self.data.ledger.contains(sp.set_type_expr(lparams_0.owner, sp.TAddress)):
                #     sp.result(sp.record(request = sp.record(owner = sp.set_type_expr(lparams_0.owner, sp.TAddress), token_id = sp.set_type_expr(lparams_0.token_id, sp.TNat)), balance = self.data.ledger[sp.set_type_expr(lparams_0.owner, sp.TAddress)].balance))
                #   sp.else:
                #     sp.result(sp.record(request = sp.record(owner = sp.set_type_expr(lparams_0.owner, sp.TAddress), token_id = sp.set_type_expr(lparams_0.token_id, sp.TNat)), balance = 0))
                # responses = sp.local("responses", params.requests.map(sp.build_lambda(f0))) # @parameter%balance_of : @storage
                DUP;        # @parameter%balance_of : @parameter%balance_of : @storage
                CAR;        # list (pair (address %owner) (nat %token_id)) : @parameter%balance_of : @storage
                MAP
                  {
                    # sp.verify(self.data.tokens.contains(lparams_0.token_id), message = 'FA2_TOKEN_UNDEFINED') # pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    DIG 2;      # @storage : pair (address %owner) (nat %token_id) : @parameter%balance_of
                    DUP;        # @storage : @storage : pair (address %owner) (nat %token_id) : @parameter%balance_of
                    DUG 3;      # @storage : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    CDDDR;      # big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    SWAP;       # pair (address %owner) (nat %token_id) : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : @parameter%balance_of : @storage
                    DUP;        # pair (address %owner) (nat %token_id) : pair (address %owner) (nat %token_id) : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : @parameter%balance_of : @storage
                    DUG 2;      # pair (address %owner) (nat %token_id) : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    CDR;        # nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    MEM;        # bool : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    IF
                      {}
                      {
                        PUSH string "FA2_TOKEN_UNDEFINED"; # string : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                        FAILWITH;   # FAILED
                      }; # pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    # if self.data.ledger.contains(sp.set_type_expr(lparams_0.owner, sp.TAddress)): # pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    DIG 2;      # @storage : pair (address %owner) (nat %token_id) : @parameter%balance_of
                    DUP;        # @storage : @storage : pair (address %owner) (nat %token_id) : @parameter%balance_of
                    DUG 3;      # @storage : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    CADDR;      # big_map address nat : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    SWAP;       # pair (address %owner) (nat %token_id) : big_map address nat : @parameter%balance_of : @storage
                    DUP;        # pair (address %owner) (nat %token_id) : pair (address %owner) (nat %token_id) : big_map address nat : @parameter%balance_of : @storage
                    DUG 2;      # pair (address %owner) (nat %token_id) : big_map address nat : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    CAR;        # address : big_map address nat : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    MEM;        # bool : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                    IF
                      {
                        # sp.result(sp.record(request = sp.record(owner = sp.set_type_expr(lparams_0.owner, sp.TAddress), token_id = sp.set_type_expr(lparams_0.token_id, sp.TNat)), balance = self.data.ledger[sp.set_type_expr(lparams_0.owner, sp.TAddress)].balance)) # pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                        DIG 2;      # @storage : pair (address %owner) (nat %token_id) : @parameter%balance_of
                        DUP;        # @storage : @storage : pair (address %owner) (nat %token_id) : @parameter%balance_of
                        DUG 3;      # @storage : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                        CADDR;      # big_map address nat : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                        SWAP;       # pair (address %owner) (nat %token_id) : big_map address nat : @parameter%balance_of : @storage
                        DUP;        # pair (address %owner) (nat %token_id) : pair (address %owner) (nat %token_id) : big_map address nat : @parameter%balance_of : @storage
                        DUG 2;      # pair (address %owner) (nat %token_id) : big_map address nat : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                        CAR;        # address : big_map address nat : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                        GET;        # option nat : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:488 # @some : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                          }
                          {
                            PUSH int 488; # int : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                            FAILWITH;   # FAILED
                          }; # @some : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                        SWAP;       # pair (address %owner) (nat %token_id) : @some : @parameter%balance_of : @storage
                        DUP;        # pair (address %owner) (nat %token_id) : pair (address %owner) (nat %token_id) : @some : @parameter%balance_of : @storage
                        CDR;        # nat : pair (address %owner) (nat %token_id) : @some : @parameter%balance_of : @storage
                        SWAP;       # pair (address %owner) (nat %token_id) : nat : @some : @parameter%balance_of : @storage
                        CAR;        # address : nat : @some : @parameter%balance_of : @storage
                        PAIR %owner %token_id; # pair (address %owner) (nat %token_id) : @some : @parameter%balance_of : @storage
                        PAIR %request %balance; # pair (pair %request (address %owner) (nat %token_id)) (@some %balance) : @parameter%balance_of : @storage
                      }
                      {
                        # sp.result(sp.record(request = sp.record(owner = sp.set_type_expr(lparams_0.owner, sp.TAddress), token_id = sp.set_type_expr(lparams_0.token_id, sp.TNat)), balance = 0)) # pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                        PUSH nat 0; # nat : pair (address %owner) (nat %token_id) : @parameter%balance_of : @storage
                        SWAP;       # pair (address %owner) (nat %token_id) : nat : @parameter%balance_of : @storage
                        DUP;        # pair (address %owner) (nat %token_id) : pair (address %owner) (nat %token_id) : nat : @parameter%balance_of : @storage
                        CDR;        # nat : pair (address %owner) (nat %token_id) : nat : @parameter%balance_of : @storage
                        SWAP;       # pair (address %owner) (nat %token_id) : nat : nat : @parameter%balance_of : @storage
                        CAR;        # address : nat : nat : @parameter%balance_of : @storage
                        PAIR %owner %token_id; # pair (address %owner) (nat %token_id) : nat : @parameter%balance_of : @storage
                        PAIR %request %balance; # pair (pair %request (address %owner) (nat %token_id)) (nat %balance) : @parameter%balance_of : @storage
                      }; # pair (pair %request (address %owner) (nat %token_id)) (@some %balance) : @parameter%balance_of : @storage
                  }; # list (pair (pair %request (address %owner) (nat %token_id)) (@some %balance)) : @parameter%balance_of : @storage
                # sp.transfer(responses.value, sp.tez(0), sp.set_type_expr(params.callback, sp.TContract(sp.TList(sp.TRecord(balance = sp.TNat, request = sp.TRecord(owner = sp.TAddress, token_id = sp.TNat).layout(("owner", "token_id"))).layout(("request", "balance")))))) # list (pair (pair %request (address %owner) (nat %token_id)) (@some %balance)) : @parameter%balance_of : @storage
                NIL operation; # list operation : list (pair (pair %request (address %owner) (nat %token_id)) (@some %balance)) : @parameter%balance_of : @storage
                DIG 2;      # @parameter%balance_of : list operation : list (pair (pair %request (address %owner) (nat %token_id)) (@some %balance)) : @storage
                CDR;        # contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list (pair (pair %request (address %owner) (nat %token_id)) (@some %balance)) : @storage
                PUSH mutez 0; # mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : list (pair (pair %request (address %owner) (nat %token_id)) (@some %balance)) : @storage
                DIG 3;      # list (pair (pair %request (address %owner) (nat %token_id)) (@some %balance)) : mutez : contract (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) : list operation : @storage
                TRANSFER_TOKENS; # operation : list operation : @storage
                CONS;       # list operation : @storage
              }
              {
                SWAP;       # @storage : @parameter%burn
                # == burn ==
                # sp.verify(sp.sender == self.data.administrator) # @storage : @parameter%burn
                DUP;        # @storage : @storage : @parameter%burn
                DUG 2;      # @storage : @parameter%burn : @storage
                CAAR;       # address : @parameter%burn : @storage
                SENDER;     # address : address : @parameter%burn : @storage
                COMPARE;    # int : @parameter%burn : @storage
                EQ;         # bool : @parameter%burn : @storage
                IF
                  {}
                  {
                    PUSH int 598; # int : @parameter%burn : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%burn : @storage
                # for burn in params: ... # @parameter%burn : @storage
                DUP;        # @parameter%burn : @parameter%burn : @storage
                ITER
                  {
                    # sp.verify(burn.token_id == 0, message = 'single-asset: token-id <> 0') # pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    DUP;        # pair (address %address) (pair (nat %amount) (nat %token_id)) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    CDDR;       # nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    PUSH nat 0; # nat : nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    COMPARE;    # int : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    EQ;         # bool : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    IF
                      {}
                      {
                        PUSH string "single-asset: token-id <> 0"; # string : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                        FAILWITH;   # FAILED
                      }; # pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    # sp.verify(burn.token_id < self.data.all_tokens, message = 'cannot burn a token that does not exist') # pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    DIG 2;      # @storage : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn
                    DUP;        # @storage : @storage : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn
                    DUG 3;      # @storage : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    CADAR;      # nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    SWAP;       # pair (address %address) (pair (nat %amount) (nat %token_id)) : nat : @parameter%burn : @storage
                    DUP;        # pair (address %address) (pair (nat %amount) (nat %token_id)) : pair (address %address) (pair (nat %amount) (nat %token_id)) : nat : @parameter%burn : @storage
                    DUG 2;      # pair (address %address) (pair (nat %amount) (nat %token_id)) : nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    CDDR;       # nat : nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    COMPARE;    # int : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    LT;         # bool : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    IF
                      {}
                      {
                        PUSH string "cannot burn a token that does not exist"; # string : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                        FAILWITH;   # FAILED
                      }; # pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    # sp.verify((self.data.ledger.contains(sp.set_type_expr(burn.address, sp.TAddress))) & (self.data.ledger[sp.set_type_expr(burn.address, sp.TAddress)].balance >= burn.amount), message = 'user does not have sufficient balance to burn') # pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    DIG 2;      # @storage : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn
                    DUP;        # @storage : @storage : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn
                    DUG 3;      # @storage : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    CADDR;      # big_map address nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    SWAP;       # pair (address %address) (pair (nat %amount) (nat %token_id)) : big_map address nat : @parameter%burn : @storage
                    DUP;        # pair (address %address) (pair (nat %amount) (nat %token_id)) : pair (address %address) (pair (nat %amount) (nat %token_id)) : big_map address nat : @parameter%burn : @storage
                    DUG 2;      # pair (address %address) (pair (nat %amount) (nat %token_id)) : big_map address nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    CAR;        # address : big_map address nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    MEM;        # bool : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    IF
                      {
                        DUP;        # pair (address %address) (pair (nat %amount) (nat %token_id)) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                        CDAR;       # nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                        DIG 3;      # @storage : nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn
                        DUP;        # @storage : @storage : nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn
                        DUG 4;      # @storage : nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                        CADDR;      # big_map address nat : nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                        DIG 2;      # pair (address %address) (pair (nat %amount) (nat %token_id)) : big_map address nat : nat : @parameter%burn : @storage
                        DUP;        # pair (address %address) (pair (nat %amount) (nat %token_id)) : pair (address %address) (pair (nat %amount) (nat %token_id)) : big_map address nat : nat : @parameter%burn : @storage
                        DUG 3;      # pair (address %address) (pair (nat %amount) (nat %token_id)) : big_map address nat : nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                        CAR;        # address : big_map address nat : nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                        GET;        # option nat : nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:610 # @some : nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                          }
                          {
                            PUSH int 610; # int : nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                        COMPARE;    # int : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                        GE;         # bool : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                      }
                      {
                        PUSH bool False; # bool : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                      }; # bool : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    IF
                      {}
                      {
                        PUSH string "user does not have sufficient balance to burn"; # string : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                        FAILWITH;   # FAILED
                      }; # pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    # self.data.ledger[sp.set_type_expr(burn.address, sp.TAddress)].balance = sp.as_nat(self.data.ledger[sp.set_type_expr(burn.address, sp.TAddress)].balance - burn.amount) # pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    DIG 2;      # @storage : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn
                    DUP;        # @storage : @storage : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn
                    DUG 3;      # @storage : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    DUP;        # @storage : @storage : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    CDR;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @storage : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    SWAP;       # @storage : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    CAR;        # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    DUP;        # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    CAR;        # address : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    SWAP;       # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    CDR;        # pair (nat %all_tokens) (big_map %ledger address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    DUP;        # pair (nat %all_tokens) (big_map %ledger address nat) : pair (nat %all_tokens) (big_map %ledger address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    CAR;        # nat : pair (nat %all_tokens) (big_map %ledger address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    SWAP;       # pair (nat %all_tokens) (big_map %ledger address nat) : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    CDR;        # big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    DUP;        # big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    DIG 5;      # pair (address %address) (pair (nat %amount) (nat %token_id)) : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn : @storage
                    DUP;        # pair (address %address) (pair (nat %amount) (nat %token_id)) : pair (address %address) (pair (nat %amount) (nat %token_id)) : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn : @storage
                    DUG 6;      # pair (address %address) (pair (nat %amount) (nat %token_id)) : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    CAR;        # address : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    DUP;        # address : address : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    DUG 2;      # address : big_map address nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    GET;        # option nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    IF_SOME
                      {
                        DROP;       # address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                      }
                      {
                        PUSH int 612; # int : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                        FAILWITH;   # FAILED
                      }; # address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    DIG 5;      # pair (address %address) (pair (nat %amount) (nat %token_id)) : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn : @storage
                    DUP;        # pair (address %address) (pair (nat %amount) (nat %token_id)) : pair (address %address) (pair (nat %amount) (nat %token_id)) : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn : @storage
                    DUG 6;      # pair (address %address) (pair (nat %amount) (nat %token_id)) : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    CDAR;       # nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn : @storage
                    DIG 8;      # @storage : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn
                    CADDR;      # big_map address nat : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %address) (pair (nat %amount) (nat %token_id)) : @parameter%burn
                    DIG 7;      # pair (address %address) (pair (nat %amount) (nat %token_id)) : big_map address nat : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                    CAR;        # address : big_map address nat : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                    GET;        # option nat : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                    IF_SOME
                      {
                        # of_some: Get-item:613 # @some : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                      }
                      {
                        PUSH int 613; # int : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                        FAILWITH;   # FAILED
                      }; # @some : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                    SUB;        # int : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                    ISNAT;      # option nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                    IF_SOME
                      {}
                      {
                        PUSH int 612; # int : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                    SOME;       # option nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                    SWAP;       # address : option nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                    UPDATE;     # big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                    SWAP;       # nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                    PAIR;       # pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                    SWAP;       # address : pair nat (big_map address nat) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                    PAIR;       # pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%burn
                    PAIR;       # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : @parameter%burn
                    SWAP;       # @parameter%burn : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                  }; # @parameter%burn : @storage
                DROP;       # @storage
                NIL operation; # list operation : @storage
              }; # list operation : @storage
          }
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%mint
                # == mint ==
                # sp.verify(sp.sender == self.data.administrator) # @storage : @parameter%mint
                DUP;        # @storage : @storage : @parameter%mint
                DUG 2;      # @storage : @parameter%mint : @storage
                CAAR;       # address : @parameter%mint : @storage
                SENDER;     # address : address : @parameter%mint : @storage
                COMPARE;    # int : @parameter%mint : @storage
                EQ;         # bool : @parameter%mint : @storage
                IF
                  {}
                  {
                    PUSH int 568; # int : @parameter%mint : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%mint : @storage
                # for mint in params: ... # @parameter%mint : @storage
                DUP;        # @parameter%mint : @parameter%mint : @storage
                ITER
                  {
                    # sp.verify(mint.token_id == 0, message = 'single-asset: token-id <> 0') # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    DUP;        # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    CDDR;       # nat : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    PUSH nat 0; # nat : nat : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    COMPARE;    # int : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    EQ;         # bool : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    IF
                      {}
                      {
                        PUSH string "single-asset: token-id <> 0"; # string : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                        FAILWITH;   # FAILED
                      }; # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    # self.data.all_tokens = sp.max(self.data.all_tokens, mint.token_id + 1) # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    DIG 2;      # @storage : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    DUP;        # @storage : @storage : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    DUG 3;      # @storage : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    DUP;        # @storage : @storage : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    CDR;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @storage : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    SWAP;       # @storage : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    CAR;        # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    DUP;        # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    CAR;        # address : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    SWAP;       # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    CDDR;       # big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : @storage
                    DIG 5;      # @storage : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    CADAR;      # nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    DUP;        # nat : nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    PUSH nat 1; # nat : nat : nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    DIG 6;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : nat : nat : nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%mint
                    DUP;        # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : nat : nat : nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%mint
                    DUG 7;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : nat : nat : nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    CDDR;       # nat : nat : nat : nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    ADD;        # nat : nat : nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    DUP;        # nat : nat : nat : nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    DUG 2;      # nat : nat : nat : nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    COMPARE;    # int : nat : nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    LE;         # bool : nat : nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    IF
                      {
                        DROP;       # nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                      }
                      {
                        SWAP;       # nat : nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DROP;       # nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                      }; # nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    PAIR;       # pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    SWAP;       # address : pair nat (big_map address nat) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    PAIR;       # pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    PAIR;       # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    # if self.data.ledger.contains(sp.set_type_expr(mint.address, sp.TAddress)): # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    DUP;        # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    DUG 3;      # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    CADDR;      # big_map address nat : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    SWAP;       # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map address nat : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    DUP;        # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map address nat : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    DUG 2;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map address nat : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    CAAR;       # address : big_map address nat : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    MEM;        # bool : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    IF
                      {
                        # self.data.ledger[sp.set_type_expr(mint.address, sp.TAddress)].balance += mint.amount # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                        DIG 2;      # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DUP;        # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CDR;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CAR;        # pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DUP;        # pair address (pair nat (big_map address nat)) : pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CAR;        # address : pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # pair address (pair nat (big_map address nat)) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CDR;        # pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DUP;        # pair nat (big_map address nat) : pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CAR;        # nat : pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # pair nat (big_map address nat) : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CDR;        # big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DUP;        # big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DIG 5;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%mint
                        DUP;        # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%mint
                        DUG 6;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CAAR;       # address : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DUP;        # address : address : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DUG 2;      # address : big_map address nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        GET;        # option nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        IF_SOME
                          {}
                          {
                            PUSH int 581; # int : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                            FAILWITH;   # FAILED
                          }; # @some : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DIG 6;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @some : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%mint
                        DUP;        # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @some : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%mint
                        DUG 7;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @some : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CADR;       # nat : @some : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        ADD;        # nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SOME;       # option nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # address : option nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        UPDATE;     # big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        PAIR;       # pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # address : pair nat (big_map address nat) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        PAIR;       # pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        PAIR;       # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DUG 2;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                      }
                      {
                        # self.data.ledger[sp.set_type_expr(mint.address, sp.TAddress)] = sp.record(balance = mint.amount) # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                        DIG 2;      # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DUP;        # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CDR;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CAR;        # pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DUP;        # pair address (pair nat (big_map address nat)) : pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CAR;        # address : pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # pair address (pair nat (big_map address nat)) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CDR;        # pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DUP;        # pair nat (big_map address nat) : pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CAR;        # nat : pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # pair nat (big_map address nat) : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CDR;        # big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DIG 4;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%mint
                        DUP;        # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%mint
                        CAAR;       # address : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%mint
                        SWAP;       # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%mint
                        DUP;        # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%mint
                        DUG 6;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CADR;       # nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SOME;       # option nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # address : option nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        UPDATE;     # big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        PAIR;       # pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # address : pair nat (big_map address nat) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        PAIR;       # pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        PAIR;       # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DUG 2;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                      }; # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    # if self.data.tokens.contains(mint.token_id): # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    DIG 2;      # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    DUP;        # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                    DUG 3;      # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    CDDDR;      # big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    SWAP;       # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    DUP;        # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    DUG 2;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    CDDR;       # nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    MEM;        # bool : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                    IF
                      {
                        DROP;       # @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                      }
                      {
                        # self.data.tokens[mint.token_id] = sp.record(token_id = mint.token_id, symbol = mint.symbol, name = '', decimals = 0, extras = {}) # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                        DIG 2;      # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DUP;        # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CAR;        # pair address (pair nat (big_map address nat)) : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CDR;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DUP;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CAR;        # pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CDR;        # pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DUP;        # pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CAR;        # bool : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        SWAP;       # pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CDR;        # big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DIG 4;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : @parameter%mint
                        DUP;        # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : @parameter%mint
                        DUG 5;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CDDR;       # nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        PUSH (pair (string %name) (pair (nat %decimals) (map %extras string string))) (Pair "" (Pair 0 {})); # pair (string %name) (pair (nat %decimals) (map %extras string string)) : nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DIG 6;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : pair (string %name) (pair (nat %decimals) (map %extras string string)) : nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : @parameter%mint
                        DUP;        # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : pair (string %name) (pair (nat %decimals) (map %extras string string)) : nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : @parameter%mint
                        DUG 7;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : pair (string %name) (pair (nat %decimals) (map %extras string string)) : nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        CDAR;       # string : pair (string %name) (pair (nat %decimals) (map %extras string string)) : nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        PAIR %symbol; # pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))) : nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : @parameter%mint
                        DIG 6;      # pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)) : pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))) : nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : @parameter%mint
                        CDDR;       # nat : pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))) : nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : @parameter%mint
                        PAIR %token_id; # pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))) : nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : @parameter%mint
                        SOME;       # option (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : @parameter%mint
                        SWAP;       # nat : option (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : @parameter%mint
                        UPDATE;     # big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : bool : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : @parameter%mint
                        SWAP;       # bool : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : @parameter%mint
                        PAIR;       # pair bool (big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair address (pair nat (big_map address nat)) : @parameter%mint
                        SWAP;       # pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair bool (big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair address (pair nat (big_map address nat)) : @parameter%mint
                        PAIR;       # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair bool (big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair address (pair nat (big_map address nat)) : @parameter%mint
                        SWAP;       # pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair bool (big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%mint
                        PAIR;       # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair bool (big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : @parameter%mint
                        SWAP;       # @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair bool (big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                      }; # @parameter%mint : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                  }; # @parameter%mint : @storage
                DROP;       # @storage
              }
              {
                SWAP;       # @storage : @parameter%set_administrator
                # == set_administrator ==
                # sp.verify(sp.sender == self.data.administrator) # @storage : @parameter%set_administrator
                DUP;        # @storage : @storage : @parameter%set_administrator
                DUG 2;      # @storage : @parameter%set_administrator : @storage
                CAAR;       # address : @parameter%set_administrator : @storage
                SENDER;     # address : address : @parameter%set_administrator : @storage
                COMPARE;    # int : @parameter%set_administrator : @storage
                EQ;         # bool : @parameter%set_administrator : @storage
                IF
                  {}
                  {
                    PUSH int 553; # int : @parameter%set_administrator : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%set_administrator : @storage
                SWAP;       # @storage : @parameter%set_administrator
                # self.data.administrator = params # @storage : @parameter%set_administrator
                DUP;        # @storage : @storage : @parameter%set_administrator
                CDR;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @storage : @parameter%set_administrator
                SWAP;       # @storage : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%set_administrator
                CADR;       # pair (nat %all_tokens) (big_map %ledger address nat) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%set_administrator
                DIG 2;      # @parameter%set_administrator : pair (nat %all_tokens) (big_map %ledger address nat) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))
                PAIR;       # pair @parameter%set_administrator (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))
                PAIR;       # pair (pair @parameter%set_administrator (pair (nat %all_tokens) (big_map %ledger address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
              }; # @storage
            NIL operation; # list operation : @storage
          }; # list operation : @storage
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%set_pause
                # == set_pause ==
                # sp.verify(sp.sender == self.data.administrator) # @storage : @parameter%set_pause
                DUP;        # @storage : @storage : @parameter%set_pause
                DUG 2;      # @storage : @parameter%set_pause : @storage
                CAAR;       # address : @parameter%set_pause : @storage
                SENDER;     # address : address : @parameter%set_pause : @storage
                COMPARE;    # int : @parameter%set_pause : @storage
                EQ;         # bool : @parameter%set_pause : @storage
                IF
                  {}
                  {
                    PUSH int 562; # int : @parameter%set_pause : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%set_pause : @storage
                SWAP;       # @storage : @parameter%set_pause
                # self.data.paused = params # @storage : @parameter%set_pause
                DUP;        # @storage : @storage : @parameter%set_pause
                CAR;        # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @storage : @parameter%set_pause
                SWAP;       # @storage : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%set_pause
                CDR;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%set_pause
                DUP;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%set_pause
                CAR;        # pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%set_pause
                SWAP;       # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%set_pause
                CDDR;       # big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%set_pause
                DIG 3;      # @parameter%set_pause : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat))
                PAIR;       # pair @parameter%set_pause (big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat))
                SWAP;       # pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair @parameter%set_pause (big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat))
                PAIR;       # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair @parameter%set_pause (big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat))
                SWAP;       # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair @parameter%set_pause (big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))
                PAIR;       # pair (pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair @parameter%set_pause (big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
              }
              {
                SWAP;       # @storage : @parameter%token_metadata
                # == token_metadata ==
                # sp.verify(~ self.data.paused) # @storage : @parameter%token_metadata
                DUP;        # @storage : @storage : @parameter%token_metadata
                DUG 2;      # @storage : @parameter%token_metadata : @storage
                CDDAR;      # bool : @parameter%token_metadata : @storage
                IF
                  {
                    PUSH int 619; # int : @parameter%token_metadata : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%token_metadata : @storage
                # sp.set_type(params, sp.TRecord(handler = sp.TLambda(sp.TList(sp.TRecord(decimals = sp.TNat, extras = sp.TMap(sp.TString, sp.TString), name = sp.TString, symbol = sp.TString, token_id = sp.TNat).layout(("token_id", ("symbol", ("name", ("decimals", "extras")))))), sp.TUnit), token_ids = sp.TList(sp.TNat)).layout(("token_ids", "handler")))
                # def f1(lparams_1):
                #   sp.set_type(self.data.tokens[lparams_1], sp.TRecord(decimals = sp.TNat, extras = sp.TMap(sp.TString, sp.TString), name = sp.TString, symbol = sp.TString, token_id = sp.TNat).layout(("token_id", ("symbol", ("name", ("decimals", "extras"))))))
                #   sp.result(self.data.tokens[lparams_1])
                # compute_630 = sp.local("compute_630", params.handler(params.token_ids.map(sp.build_lambda(f1)))) # @parameter%token_metadata : @storage
                DUP;        # @parameter%token_metadata : @parameter%token_metadata : @storage
                CDR;        # lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @parameter%token_metadata : @storage
                SWAP;       # @parameter%token_metadata : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @storage
                DUP;        # @parameter%token_metadata : @parameter%token_metadata : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @storage
                DUG 2;      # @parameter%token_metadata : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @parameter%token_metadata : @storage
                CAR;        # list nat : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @parameter%token_metadata : @storage
                MAP
                  {
                    # sp.result(self.data.tokens[lparams_1]) # nat : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @parameter%token_metadata : @storage
                    DIG 3;      # @storage : nat : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @parameter%token_metadata
                    DUP;        # @storage : @storage : nat : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @parameter%token_metadata
                    DUG 4;      # @storage : nat : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @parameter%token_metadata : @storage
                    CDDDR;      # big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : nat : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @parameter%token_metadata : @storage
                    SWAP;       # nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @parameter%token_metadata : @storage
                    GET;        # option (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @parameter%token_metadata : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:629 # @some : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @parameter%token_metadata : @storage
                      }
                      {
                        PUSH int 629; # int : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @parameter%token_metadata : @storage
                        FAILWITH;   # FAILED
                      }; # @some : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @parameter%token_metadata : @storage
                  }; # list @some : lambda (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit : @parameter%token_metadata : @storage
                EXEC;       # unit : @parameter%token_metadata : @storage
                DROP 2;     # @storage
              }; # pair (pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair @parameter%set_pause (big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
            NIL operation; # list operation : pair (pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair @parameter%set_pause (big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
          }
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%token_metadata_registry
                # == token_metadata_registry ==
                # sp.verify(~ self.data.paused) # @storage : @parameter%token_metadata_registry
                DUP;        # @storage : @storage : @parameter%token_metadata_registry
                DUG 2;      # @storage : @parameter%token_metadata_registry : @storage
                CDDAR;      # bool : @parameter%token_metadata_registry : @storage
                IF
                  {
                    PUSH int 509; # int : @parameter%token_metadata_registry : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%token_metadata_registry : @storage
                # sp.transfer(sp.self_address, sp.tez(0), params) # @parameter%token_metadata_registry : @storage
                NIL operation; # list operation : @parameter%token_metadata_registry : @storage
                SWAP;       # @parameter%token_metadata_registry : list operation : @storage
                PUSH mutez 0; # mutez : @parameter%token_metadata_registry : list operation : @storage
                SELF;       # contract (or (or (or (pair %balance_of (list %requests (pair (address %owner) (nat %token_id))) (contract %callback (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))) (list %burn (pair (address %address) (pair (nat %amount) (nat %token_id))))) (or (list %mint (pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id)))) (address %set_administrator))) (or (or (bool %set_pause) (pair %token_metadata (list %token_ids nat) (lambda %handler (list (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) unit))) (or (contract %token_metadata_registry address) (or (list %transfer (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) (list %update_operators (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))))) : mutez : @parameter%token_metadata_registry : list operation : @storage
                ADDRESS;    # address : mutez : @parameter%token_metadata_registry : list operation : @storage
                TRANSFER_TOKENS; # operation : list operation : @storage
                CONS;       # list operation : @storage
              }
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%transfer
                    # == transfer ==
                    # sp.verify(~ self.data.paused) # @storage : @parameter%transfer
                    DUP;        # @storage : @storage : @parameter%transfer
                    DUG 2;      # @storage : @parameter%transfer : @storage
                    CDDAR;      # bool : @parameter%transfer : @storage
                    IF
                      {
                        PUSH int 438; # int : @parameter%transfer : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%transfer : @storage
                    # for transfer in params: ... # @parameter%transfer : @storage
                    DUP;        # @parameter%transfer : @parameter%transfer : @storage
                    ITER
                      {
                        # for tx in transfer.txs: ... # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        DUP;        # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        CDR;        # list (pair (address %to_) (pair (nat %token_id) (nat %amount))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        ITER
                          {
                            # sp.verify(tx.token_id == 0, message = 'single-asset: token-id <> 0') # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            CDAR;       # nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            PUSH nat 0; # nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            COMPARE;    # int : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            EQ;         # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            IF
                              {}
                              {
                                PUSH string "single-asset: token-id <> 0"; # string : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                FAILWITH;   # FAILED
                              }; # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            # sp.verify(((sp.sender == self.data.administrator) | (transfer.from_ == sp.sender)) | (self.data.operators.contains(sp.set_type_expr(sp.record(owner = transfer.from_, operator = sp.sender, token_id = tx.token_id), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id")))))), message = 'FA2_NOT_OPERATOR') # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            DIG 3;      # @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                            DUP;        # @storage : @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                            DUG 4;      # @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            CAAR;       # address : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            SENDER;     # address : address : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            COMPARE;    # int : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            EQ;         # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            IF
                              {
                                PUSH bool True; # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                              }
                              {
                                SENDER;     # address : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DIG 2;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : address : pair (address %to_) (pair (nat %token_id) (nat %amount)) : @parameter%transfer : @storage
                                DUP;        # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : address : pair (address %to_) (pair (nat %token_id) (nat %amount)) : @parameter%transfer : @storage
                                DUG 3;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : address : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CAR;        # address : address : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                COMPARE;    # int : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                EQ;         # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                              }; # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            IF
                              {
                                PUSH bool True; # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                              }
                              {
                                DIG 3;      # @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                DUP;        # @storage : @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                DUG 4;      # @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CDADR;      # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                SWAP;       # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DUG 2;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CDAR;       # nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                SENDER;     # address : nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                PAIR %operator %token_id; # pair (address %operator) (nat %token_id) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DIG 3;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %operator) (nat %token_id) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : @parameter%transfer : @storage
                                DUP;        # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %operator) (nat %token_id) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : @parameter%transfer : @storage
                                DUG 4;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %operator) (nat %token_id) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CAR;        # address : pair (address %operator) (nat %token_id) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                PAIR %owner; # pair (address %owner) (pair (address %operator) (nat %token_id)) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                MEM;        # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                              }; # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            IF
                              {}
                              {
                                PUSH string "FA2_NOT_OPERATOR"; # string : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                FAILWITH;   # FAILED
                              }; # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            # sp.verify(self.data.tokens.contains(tx.token_id), message = 'FA2_TOKEN_UNDEFINED') # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            DIG 3;      # @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                            DUP;        # @storage : @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                            DUG 4;      # @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            CDDDR;      # big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            SWAP;       # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            DUG 2;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            CDAR;       # nat : big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            MEM;        # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            IF
                              {}
                              {
                                PUSH string "FA2_TOKEN_UNDEFINED"; # string : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                FAILWITH;   # FAILED
                              }; # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            # if tx.amount > 0: # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            CDDR;       # nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            PUSH nat 0; # nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            COMPARE;    # int : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            LT;         # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                            IF
                              {
                                # sp.verify(self.data.ledger[sp.set_type_expr(transfer.from_, sp.TAddress)].balance >= tx.amount, message = 'FA2_INSUFFICIENT_BALANCE') # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CDDR;       # nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DIG 4;      # @storage : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                DUP;        # @storage : @storage : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                DUG 5;      # @storage : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CADDR;      # big_map address nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DIG 3;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : big_map address nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : @parameter%transfer : @storage
                                DUP;        # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : big_map address nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : @parameter%transfer : @storage
                                DUG 4;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : big_map address nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CAR;        # address : big_map address nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                GET;        # option nat : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                IF_SOME
                                  {
                                    # of_some: Get-item:466 # @some : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                  }
                                  {
                                    PUSH int 466; # int : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                    FAILWITH;   # FAILED
                                  }; # @some : nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                COMPARE;    # int : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                GE;         # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                IF
                                  {}
                                  {
                                    PUSH string "FA2_INSUFFICIENT_BALANCE"; # string : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                    FAILWITH;   # FAILED
                                  }; # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                # self.data.ledger[sp.set_type_expr(transfer.from_, sp.TAddress)].balance = sp.as_nat(self.data.ledger[sp.set_type_expr(transfer.from_, sp.TAddress)].balance - tx.amount) # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DIG 3;      # @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                DUP;        # @storage : @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                DUG 4;      # @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DUP;        # @storage : @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CDR;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @storage : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                SWAP;       # @storage : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CAR;        # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DUP;        # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CAR;        # address : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                SWAP;       # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CDR;        # pair (nat %all_tokens) (big_map %ledger address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DUP;        # pair (nat %all_tokens) (big_map %ledger address nat) : pair (nat %all_tokens) (big_map %ledger address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CAR;        # nat : pair (nat %all_tokens) (big_map %ledger address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                SWAP;       # pair (nat %all_tokens) (big_map %ledger address nat) : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CDR;        # big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DUP;        # big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DIG 6;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : @parameter%transfer : @storage
                                DUP;        # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : @parameter%transfer : @storage
                                DUG 7;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CAR;        # address : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DUP;        # address : address : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DUG 2;      # address : big_map address nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                GET;        # option nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                IF_SOME
                                  {
                                    DROP;       # address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                  }
                                  {
                                    PUSH int 469; # int : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                    FAILWITH;   # FAILED
                                  }; # address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DIG 5;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DUG 6;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                CDDR;       # nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                                DIG 9;      # @storage : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                CADDR;      # big_map address nat : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                DIG 8;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : big_map address nat : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : @parameter%transfer
                                DUP;        # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : big_map address nat : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : @parameter%transfer
                                DUG 9;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : big_map address nat : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                CAR;        # address : big_map address nat : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                GET;        # option nat : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                IF_SOME
                                  {
                                    # of_some: Get-item:470 # @some : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                  }
                                  {
                                    PUSH int 470; # int : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    FAILWITH;   # FAILED
                                  }; # @some : nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                SUB;        # int : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                ISNAT;      # option nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                IF_SOME
                                  {}
                                  {
                                    PUSH int 469; # int : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    FAILWITH;   # FAILED
                                  }; # @some : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                SOME;       # option nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                SWAP;       # address : option nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                UPDATE;     # big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                SWAP;       # nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                PAIR;       # pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                SWAP;       # address : pair nat (big_map address nat) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                PAIR;       # pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                PAIR;       # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                # if self.data.ledger.contains(sp.set_type_expr(tx.to_, sp.TAddress)): # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                DUP;        # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                DUG 4;      # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                                CADDR;      # big_map address nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                                SWAP;       # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map address nat : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                                DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map address nat : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                                DUG 2;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map address nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                                CAR;        # address : big_map address nat : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                                MEM;        # bool : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                                IF
                                  {
                                    # self.data.ledger[sp.set_type_expr(tx.to_, sp.TAddress)].balance += tx.amount # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                                    DIG 3;      # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DUP;        # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CDR;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SWAP;       # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CAR;        # pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DUP;        # pair address (pair nat (big_map address nat)) : pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CAR;        # address : pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SWAP;       # pair address (pair nat (big_map address nat)) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CDR;        # pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DUP;        # pair nat (big_map address nat) : pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CAR;        # nat : pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SWAP;       # pair nat (big_map address nat) : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CDR;        # big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DUP;        # big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DIG 5;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DUG 6;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CAR;        # address : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DUP;        # address : address : big_map address nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DUG 2;      # address : big_map address nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    GET;        # option nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    IF_SOME
                                      {}
                                      {
                                        PUSH int 472; # int : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                        FAILWITH;   # FAILED
                                      }; # @some : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DIG 6;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : @some : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CDDR;       # nat : @some : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    ADD;        # nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SOME;       # option nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SWAP;       # address : option nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    UPDATE;     # big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SWAP;       # nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    PAIR;       # pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SWAP;       # address : pair nat (big_map address nat) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    PAIR;       # pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    PAIR;       # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DUG 2;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                                  }
                                  {
                                    # self.data.ledger[sp.set_type_expr(tx.to_, sp.TAddress)] = sp.record(balance = tx.amount) # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                                    DIG 3;      # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DUP;        # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CDR;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SWAP;       # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CAR;        # pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DUP;        # pair address (pair nat (big_map address nat)) : pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CAR;        # address : pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SWAP;       # pair address (pair nat (big_map address nat)) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CDR;        # pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DUP;        # pair nat (big_map address nat) : pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CAR;        # nat : pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SWAP;       # pair nat (big_map address nat) : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CDR;        # big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DIG 4;      # pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DUP;        # pair (address %to_) (pair (nat %token_id) (nat %amount)) : pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CAR;        # address : pair (address %to_) (pair (nat %token_id) (nat %amount)) : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SWAP;       # pair (address %to_) (pair (nat %token_id) (nat %amount)) : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    CDDR;       # nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SOME;       # option nat : address : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SWAP;       # address : option nat : big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    UPDATE;     # big_map address nat : nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SWAP;       # nat : big_map address nat : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    PAIR;       # pair nat (big_map address nat) : address : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    SWAP;       # address : pair nat (big_map address nat) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    PAIR;       # pair address (pair nat (big_map address nat)) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    PAIR;       # pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer
                                    DUG 2;      # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                                  }; # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                              }
                              {
                                DROP;       # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                              }; # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : pair (pair address (pair nat (big_map address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                          }; # pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))) : @parameter%transfer : @storage
                        DROP;       # @parameter%transfer : @storage
                      }; # @parameter%transfer : @storage
                    DROP;       # @storage
                  }
                  {
                    # == update_operators ==
                    # for update in params: ... # @parameter%update_operators : @storage
                    DUP;        # @parameter%update_operators : @parameter%update_operators : @storage
                    ITER
                      {
                        # with update.match_cases(...): # or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                        DUP;        # or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                        IF_LEFT
                          {
                            # sp.verify((arg.owner == sp.sender) | (sp.sender == self.data.administrator)) # pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                            DUP;        # pair (address %owner) (pair (address %operator) (nat %token_id)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                            CAR;        # address : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                            SENDER;     # address : address : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                            COMPARE;    # int : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                            EQ;         # bool : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                            IF
                              {
                                PUSH bool True; # bool : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                              }
                              {
                                DIG 3;      # @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators
                                DUP;        # @storage : @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators
                                DUG 4;      # @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                                CAAR;       # address : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                                SENDER;     # address : address : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                                COMPARE;    # int : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                                EQ;         # bool : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                              }; # bool : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                            IF
                              {
                                SWAP;       # or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                                DROP;       # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                              }
                              {
                                PUSH int 523; # int : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                                FAILWITH;   # FAILED
                              }; # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                            # self.data.operators[sp.set_type_expr(sp.record(owner = arg.owner, operator = arg.operator, token_id = arg.token_id), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id"))))] = sp.unit # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                            DIG 2;      # @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            DUP;        # @storage : @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            CAR;        # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            SWAP;       # @storage : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            CDR;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            DUP;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            CDR;        # pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            SWAP;       # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            CAR;        # pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            DUP;        # pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            CAR;        # unit : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            SWAP;       # pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            CDR;        # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            DIG 4;      # pair (address %owner) (pair (address %operator) (nat %token_id)) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            DUP;        # pair (address %owner) (pair (address %operator) (nat %token_id)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            CDDR;       # nat : pair (address %owner) (pair (address %operator) (nat %token_id)) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            SWAP;       # pair (address %owner) (pair (address %operator) (nat %token_id)) : nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            DUP;        # pair (address %owner) (pair (address %operator) (nat %token_id)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            DUG 6;      # pair (address %owner) (pair (address %operator) (nat %token_id)) : nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            CDAR;       # address : nat : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            PAIR %operator %token_id; # pair (address %operator) (nat %token_id) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            DIG 5;      # pair (address %owner) (pair (address %operator) (nat %token_id)) : pair (address %operator) (nat %token_id) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            CAR;        # address : pair (address %operator) (nat %token_id) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            PAIR %owner; # pair (address %owner) (pair (address %operator) (nat %token_id)) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            PUSH (option unit) (Some Unit); # option unit : pair (address %owner) (pair (address %operator) (nat %token_id)) : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            SWAP;       # pair (address %owner) (pair (address %operator) (nat %token_id)) : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            UPDATE;     # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            SWAP;       # unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            PAIR;       # pair unit (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            PAIR;       # pair (pair unit (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            SWAP;       # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (pair unit (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%update_operators
                            PAIR;       # pair (pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat))) (pair (pair unit (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : @parameter%update_operators
                            SWAP;       # @parameter%update_operators : pair (pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat))) (pair (pair unit (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                          }
                          {
                            # sp.verify((arg.owner == sp.sender) | (sp.sender == self.data.administrator)) # pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                            DUP;        # pair (address %owner) (pair (address %operator) (nat %token_id)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                            CAR;        # address : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                            SENDER;     # address : address : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                            COMPARE;    # int : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                            EQ;         # bool : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                            IF
                              {
                                PUSH bool True; # bool : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                              }
                              {
                                DIG 3;      # @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators
                                DUP;        # @storage : @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators
                                DUG 4;      # @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                                CAAR;       # address : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                                SENDER;     # address : address : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                                COMPARE;    # int : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                                EQ;         # bool : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                              }; # bool : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                            IF
                              {
                                SWAP;       # or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                                DROP;       # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                              }
                              {
                                PUSH int 530; # int : pair (address %owner) (pair (address %operator) (nat %token_id)) : or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))) : @parameter%update_operators : @storage
                                FAILWITH;   # FAILED
                              }; # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                            # del self.data.operators[sp.set_type_expr(sp.record(owner = arg.owner, operator = arg.operator, token_id = arg.token_id), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id"))))] # pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators : @storage
                            DIG 2;      # @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            DUP;        # @storage : @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            CAR;        # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @storage : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            SWAP;       # @storage : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            CDR;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            DUP;        # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            CDR;        # pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            SWAP;       # pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            CAR;        # pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            DUP;        # pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            CAR;        # unit : pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            SWAP;       # pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            CDR;        # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            NONE unit;  # option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            DIG 5;      # pair (address %owner) (pair (address %operator) (nat %token_id)) : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            DUP;        # pair (address %owner) (pair (address %operator) (nat %token_id)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            CDDR;       # nat : pair (address %owner) (pair (address %operator) (nat %token_id)) : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            SWAP;       # pair (address %owner) (pair (address %operator) (nat %token_id)) : nat : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            DUP;        # pair (address %owner) (pair (address %operator) (nat %token_id)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : nat : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            DUG 7;      # pair (address %owner) (pair (address %operator) (nat %token_id)) : nat : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            CDAR;       # address : nat : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            PAIR %operator %token_id; # pair (address %operator) (nat %token_id) : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (address %owner) (pair (address %operator) (nat %token_id)) : @parameter%update_operators
                            DIG 6;      # pair (address %owner) (pair (address %operator) (nat %token_id)) : pair (address %operator) (nat %token_id) : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            CAR;        # address : pair (address %operator) (nat %token_id) : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            PAIR %owner; # pair (address %owner) (pair (address %operator) (nat %token_id)) : option unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            UPDATE;     # big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            SWAP;       # unit : big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            PAIR;       # pair unit (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) : pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            PAIR;       # pair (pair unit (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : @parameter%update_operators
                            SWAP;       # pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat)) : pair (pair unit (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))) : @parameter%update_operators
                            PAIR;       # pair (pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat))) (pair (pair unit (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))))) : @parameter%update_operators
                            SWAP;       # @parameter%update_operators : pair (pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat))) (pair (pair unit (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                          }; # @parameter%update_operators : pair (pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat))) (pair (pair unit (big_map (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (bool %paused) (big_map %tokens nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
                      }; # @parameter%update_operators : @storage
                    DROP;       # @storage
                  }; # @storage
                NIL operation; # list operation : @storage
              }; # list operation : @storage
          }; # list operation : pair (pair (address %administrator) (pair (nat %all_tokens) (big_map %ledger address nat))) (pair (pair (unit %metadata_string) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair @parameter%set_pause (big_map nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))
      }; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };