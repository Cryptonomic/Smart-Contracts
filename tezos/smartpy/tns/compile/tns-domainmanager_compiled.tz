parameter (or (or (or (bytes %commit) (string %deleteName)) (or (pair %registerName (pair (int %duration) (string %name)) (pair (int %nonce) (address %resolver))) (pair %sendAddressInfo (address %addr) (contract %k (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)))))) (or (or (pair %sendNameInfo (contract %k (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name))) (string %name)) (pair %setCommitmentAges (int %_maxCommitTime) (int %_minCommitTime))) (or (pair %transferNameOwnership (string %name) (address %newNameOwner)) (or (pair %updateRegistrationPeriod (int %duration) (string %name)) (pair %updateResolver (string %name) (address %resolver))))));
storage   (pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))));
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                # Entry point: commit # @parameter%commit : @storage
                # sp.verify((~ (self.data.commitments.contains(params.commitment))) | (sp.now > sp.add_seconds(self.data.commitments[params.commitment], self.data.maxCommitTime)), message = 'Commitment does not exist, or is expired') # @parameter%commit : @storage
                SWAP;       # @storage : @parameter%commit
                DUP;        # @storage : @storage : @parameter%commit
                DUG 2;      # @storage : @parameter%commit : @storage
                CAADR;      # big_map bytes timestamp : @parameter%commit : @storage
                SWAP;       # @parameter%commit : big_map bytes timestamp : @storage
                DUP;        # @parameter%commit : @parameter%commit : big_map bytes timestamp : @storage
                DUG 2;      # @parameter%commit : big_map bytes timestamp : @parameter%commit : @storage
                MEM;        # bool : @parameter%commit : @storage
                IF
                  {
                    SWAP;       # @storage : @parameter%commit
                    DUP;        # @storage : @storage : @parameter%commit
                    DUG 2;      # @storage : @parameter%commit : @storage
                    CAADR;      # big_map bytes timestamp : @parameter%commit : @storage
                    SWAP;       # @parameter%commit : big_map bytes timestamp : @storage
                    DUP;        # @parameter%commit : @parameter%commit : big_map bytes timestamp : @storage
                    DUG 2;      # @parameter%commit : big_map bytes timestamp : @parameter%commit : @storage
                    GET;        # option timestamp : @parameter%commit : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:35 # @some : @parameter%commit : @storage
                      }
                      {
                        PUSH string "Get-item:35"; # string : @parameter%commit : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%commit : @storage
                    DIG 2;      # @storage : @some : @parameter%commit
                    DUP;        # @storage : @storage : @some : @parameter%commit
                    DUG 3;      # @storage : @some : @parameter%commit : @storage
                    CDAAR;      # int : @some : @parameter%commit : @storage
                    ADD;        # timestamp : @parameter%commit : @storage
                    NOW;        # timestamp : timestamp : @parameter%commit : @storage
                    COMPARE;    # int : @parameter%commit : @storage
                    GT;         # bool : @parameter%commit : @storage
                  }
                  {
                    PUSH bool True; # bool : @parameter%commit : @storage
                  }; # bool : @parameter%commit : @storage
                IF
                  {}
                  {
                    PUSH string "Commitment does not exist, or is expired"; # string : @parameter%commit : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%commit : @storage
                # self.data.commitments[params.commitment] = sp.now # @parameter%commit : @storage
                SWAP;       # @storage : @parameter%commit
                DUP;        # @storage : @storage : @parameter%commit
                CDR;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @storage : @parameter%commit
                SWAP;       # @storage : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%commit
                CAR;        # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%commit
                DUP;        # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%commit
                CDR;        # pair (address %domainManager) (int %interval) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%commit
                SWAP;       # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%commit
                CAR;        # pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%commit
                DUP;        # pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%commit
                CAR;        # big_map address string : pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%commit
                SWAP;       # pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%commit
                CDR;        # big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%commit
                NOW;        # timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%commit
                SOME;       # option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%commit
                DIG 5;      # @parameter%commit : option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))
                UPDATE;     # big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))
                SWAP;       # big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))
                PAIR;       # pair (big_map address string) (big_map bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))
                PAIR;       # pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))
                PAIR;       # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
              }
              {
                # Entry point: deleteName # @parameter%deleteName : @storage
                # sp.verify(self.data.nameRegistry.contains(params.name), message = 'Name not registered') # @parameter%deleteName : @storage
                SWAP;       # @storage : @parameter%deleteName
                DUP;        # @storage : @storage : @parameter%deleteName
                DUG 2;      # @storage : @parameter%deleteName : @storage
                CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%deleteName : @storage
                SWAP;       # @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUP;        # @parameter%deleteName : @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUG 2;      # @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%deleteName : @storage
                MEM;        # bool : @parameter%deleteName : @storage
                IF
                  {}
                  {
                    PUSH string "Name not registered"; # string : @parameter%deleteName : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%deleteName : @storage
                # sp.verify(~ (sp.now > sp.add_seconds(self.data.nameRegistry[params.name].registeredAt, self.data.nameRegistry[params.name].registrationPeriod)), message = 'Name registration has expired') # @parameter%deleteName : @storage
                SWAP;       # @storage : @parameter%deleteName
                DUP;        # @storage : @storage : @parameter%deleteName
                DUG 2;      # @storage : @parameter%deleteName : @storage
                CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%deleteName : @storage
                SWAP;       # @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUP;        # @parameter%deleteName : @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUG 2;      # @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%deleteName : @storage
                GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%deleteName : @storage
                IF_SOME
                  {
                    # of_some: Get-item:111 # @some : @parameter%deleteName : @storage
                  }
                  {
                    PUSH string "Get-item:111"; # string : @parameter%deleteName : @storage
                    FAILWITH;   # FAILED
                  }; # @some : @parameter%deleteName : @storage
                CDAR;       # timestamp : @parameter%deleteName : @storage
                DIG 2;      # @storage : timestamp : @parameter%deleteName
                DUP;        # @storage : @storage : timestamp : @parameter%deleteName
                DUG 3;      # @storage : timestamp : @parameter%deleteName : @storage
                CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%deleteName : @storage
                DIG 2;      # @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @storage
                DUP;        # @parameter%deleteName : @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @storage
                DUG 3;      # @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%deleteName : @storage
                GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%deleteName : @storage
                IF_SOME
                  {
                    # of_some: Get-item:111 # @some : timestamp : @parameter%deleteName : @storage
                  }
                  {
                    PUSH string "Get-item:111"; # string : timestamp : @parameter%deleteName : @storage
                    FAILWITH;   # FAILED
                  }; # @some : timestamp : @parameter%deleteName : @storage
                CDDAR;      # int : timestamp : @parameter%deleteName : @storage
                ADD;        # timestamp : @parameter%deleteName : @storage
                NOW;        # timestamp : timestamp : @parameter%deleteName : @storage
                COMPARE;    # int : @parameter%deleteName : @storage
                GT;         # bool : @parameter%deleteName : @storage
                IF
                  {
                    PUSH string "Name registration has expired"; # string : @parameter%deleteName : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%deleteName : @storage
                # sp.verify((sp.sender == self.data.nameRegistry[params.name].owner) | (sp.sender == self.data.domainManager), message = 'Invalid permissions') # @parameter%deleteName : @storage
                SWAP;       # @storage : @parameter%deleteName
                DUP;        # @storage : @storage : @parameter%deleteName
                DUG 2;      # @storage : @parameter%deleteName : @storage
                CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%deleteName : @storage
                SWAP;       # @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUP;        # @parameter%deleteName : @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUG 2;      # @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%deleteName : @storage
                GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%deleteName : @storage
                IF_SOME
                  {
                    # of_some: Get-item:111 # @some : @parameter%deleteName : @storage
                  }
                  {
                    PUSH string "Get-item:111"; # string : @parameter%deleteName : @storage
                    FAILWITH;   # FAILED
                  }; # @some : @parameter%deleteName : @storage
                CADDR;      # address : @parameter%deleteName : @storage
                SENDER;     # address : address : @parameter%deleteName : @storage
                COMPARE;    # int : @parameter%deleteName : @storage
                EQ;         # bool : @parameter%deleteName : @storage
                IF
                  {
                    PUSH bool True; # bool : @parameter%deleteName : @storage
                  }
                  {
                    SWAP;       # @storage : @parameter%deleteName
                    DUP;        # @storage : @storage : @parameter%deleteName
                    DUG 2;      # @storage : @parameter%deleteName : @storage
                    CADAR;      # address : @parameter%deleteName : @storage
                    SENDER;     # address : address : @parameter%deleteName : @storage
                    COMPARE;    # int : @parameter%deleteName : @storage
                    EQ;         # bool : @parameter%deleteName : @storage
                  }; # bool : @parameter%deleteName : @storage
                IF
                  {}
                  {
                    PUSH string "Invalid permissions"; # string : @parameter%deleteName : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%deleteName : @storage
                # del self.data.addressRegistry[self.data.nameRegistry[params.name].resolver] # @parameter%deleteName : @storage
                SWAP;       # @storage : @parameter%deleteName
                DUP;        # @storage : @storage : @parameter%deleteName
                DUG 2;      # @storage : @parameter%deleteName : @storage
                DUP;        # @storage : @storage : @parameter%deleteName : @storage
                CDR;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @storage : @parameter%deleteName : @storage
                SWAP;       # @storage : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName : @storage
                CAR;        # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName : @storage
                DUP;        # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName : @storage
                CDR;        # pair (address %domainManager) (int %interval) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName : @storage
                SWAP;       # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName : @storage
                CAR;        # pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName : @storage
                DUP;        # pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName : @storage
                CDR;        # big_map bytes timestamp : pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName : @storage
                SWAP;       # pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName : @storage
                CAR;        # big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName : @storage
                NONE string; # option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName : @storage
                DIG 6;      # @storage : option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName
                CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName
                DIG 6;      # @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))
                DUP;        # @parameter%deleteName : @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))
                DUG 7;      # @parameter%deleteName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName
                GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName
                IF_SOME
                  {
                    # of_some: Get-item:111 # @some : option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName
                  }
                  {
                    PUSH string "Get-item:111"; # string : option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName
                    FAILWITH;   # FAILED
                  }; # @some : option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName
                CDDDR;      # address : option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName
                UPDATE;     # big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName
                PAIR;       # pair (big_map address string) (big_map bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName
                PAIR;       # pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%deleteName
                PAIR;       # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : @parameter%deleteName
                SWAP;       # @parameter%deleteName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                # del self.data.nameRegistry[params.name] # @parameter%deleteName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                SWAP;       # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : @parameter%deleteName
                DUP;        # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : @parameter%deleteName
                CAR;        # pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : @parameter%deleteName
                SWAP;       # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                CDR;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                DUP;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                CAR;        # pair (int %maxCommitTime) (int %maxDuration) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                SWAP;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                CDR;        # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                DUP;        # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                CAR;        # int : pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                SWAP;       # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                CDR;        # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                DUP;        # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                CDR;        # mutez : pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                SWAP;       # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                CAR;        # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                NONE (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))); # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%deleteName
                DIG 6;      # @parameter%deleteName : option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))
                UPDATE;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))
                PAIR;       # pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))
                SWAP;       # int : pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))
                PAIR;       # pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))
                SWAP;       # pair (int %maxCommitTime) (int %maxDuration) : pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))
                PAIR;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))
                SWAP;       # pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))
                PAIR;       # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
              }; # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
            NIL operation; # list operation : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
          }
          {
            IF_LEFT
              {
                # Entry point: registerName # @parameter%registerName : @storage
                # sp.verify(params.name != '') # @parameter%registerName : @storage
                DUP;        # @parameter%registerName : @parameter%registerName : @storage
                CADR;       # string : @parameter%registerName : @storage
                PUSH string ""; # string : string : @parameter%registerName : @storage
                COMPARE;    # int : @parameter%registerName : @storage
                NEQ;        # bool : @parameter%registerName : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: params.name != ''"; # string : @parameter%registerName : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%registerName : @storage
                # sp.verify(~ ((self.data.nameRegistry.contains(params.name)) & (~ (sp.now > sp.add_seconds(self.data.nameRegistry[params.name].registeredAt, self.data.nameRegistry[params.name].registrationPeriod)))), message = 'Name is currently registered') # @parameter%registerName : @storage
                SWAP;       # @storage : @parameter%registerName
                DUP;        # @storage : @storage : @parameter%registerName
                DUG 2;      # @storage : @parameter%registerName : @storage
                CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%registerName : @storage
                SWAP;       # @parameter%registerName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUP;        # @parameter%registerName : @parameter%registerName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUG 2;      # @parameter%registerName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%registerName : @storage
                CADR;       # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%registerName : @storage
                MEM;        # bool : @parameter%registerName : @storage
                IF
                  {
                    SWAP;       # @storage : @parameter%registerName
                    DUP;        # @storage : @storage : @parameter%registerName
                    DUG 2;      # @storage : @parameter%registerName : @storage
                    CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%registerName : @storage
                    SWAP;       # @parameter%registerName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                    DUP;        # @parameter%registerName : @parameter%registerName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                    DUG 2;      # @parameter%registerName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%registerName : @storage
                    CADR;       # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%registerName : @storage
                    GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%registerName : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:48 # @some : @parameter%registerName : @storage
                      }
                      {
                        PUSH string "Get-item:48"; # string : @parameter%registerName : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%registerName : @storage
                    CDAR;       # timestamp : @parameter%registerName : @storage
                    DIG 2;      # @storage : timestamp : @parameter%registerName
                    DUP;        # @storage : @storage : timestamp : @parameter%registerName
                    DUG 3;      # @storage : timestamp : @parameter%registerName : @storage
                    CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%registerName : @storage
                    DIG 2;      # @parameter%registerName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @storage
                    DUP;        # @parameter%registerName : @parameter%registerName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @storage
                    DUG 3;      # @parameter%registerName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%registerName : @storage
                    CADR;       # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%registerName : @storage
                    GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%registerName : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:48 # @some : timestamp : @parameter%registerName : @storage
                      }
                      {
                        PUSH string "Get-item:48"; # string : timestamp : @parameter%registerName : @storage
                        FAILWITH;   # FAILED
                      }; # @some : timestamp : @parameter%registerName : @storage
                    CDDAR;      # int : timestamp : @parameter%registerName : @storage
                    ADD;        # timestamp : @parameter%registerName : @storage
                    NOW;        # timestamp : timestamp : @parameter%registerName : @storage
                    COMPARE;    # int : @parameter%registerName : @storage
                    GT;         # bool : @parameter%registerName : @storage
                    NOT;        # bool : @parameter%registerName : @storage
                  }
                  {
                    PUSH bool False; # bool : @parameter%registerName : @storage
                  }; # bool : @parameter%registerName : @storage
                IF
                  {
                    PUSH string "Name is currently registered"; # string : @parameter%registerName : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%registerName : @storage
                # sp.verify(params.duration < self.data.maxDuration, message = 'Duration too long') # @parameter%registerName : @storage
                SWAP;       # @storage : @parameter%registerName
                DUP;        # @storage : @storage : @parameter%registerName
                DUG 2;      # @storage : @parameter%registerName : @storage
                CDADR;      # int : @parameter%registerName : @storage
                SWAP;       # @parameter%registerName : int : @storage
                DUP;        # @parameter%registerName : @parameter%registerName : int : @storage
                DUG 2;      # @parameter%registerName : int : @parameter%registerName : @storage
                CAAR;       # int : int : @parameter%registerName : @storage
                COMPARE;    # int : @parameter%registerName : @storage
                LT;         # bool : @parameter%registerName : @storage
                IF
                  {}
                  {
                    PUSH string "Duration too long"; # string : @parameter%registerName : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%registerName : @storage
                # cost = sp.local("cost", sp.tez(0), sp.TMutez) # @parameter%registerName : @storage
                PUSH mutez 0; # mutez : @parameter%registerName : @storage
                # sp.verify(sp.add_seconds(self.data.commitments[sp.blake2b(sp.pack(sp.record(name = params.name, nonce = params.nonce, owner = sp.sender)))], self.data.minCommitTime) <= sp.now, message = 'Min commitment time not elapsed') # mutez : @parameter%registerName : @storage
                NOW;        # timestamp : mutez : @parameter%registerName : @storage
                DIG 3;      # @storage : timestamp : mutez : @parameter%registerName
                DUP;        # @storage : @storage : timestamp : mutez : @parameter%registerName
                DUG 4;      # @storage : timestamp : mutez : @parameter%registerName : @storage
                CAADR;      # big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                SENDER;     # address : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                DIG 4;      # @parameter%registerName : address : big_map bytes timestamp : timestamp : mutez : @storage
                DUP;        # @parameter%registerName : @parameter%registerName : address : big_map bytes timestamp : timestamp : mutez : @storage
                DUG 5;      # @parameter%registerName : address : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                CDAR;       # int : address : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                PAIR %nonce %owner; # pair (int %nonce) (address %owner) : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                DIG 4;      # @parameter%registerName : pair (int %nonce) (address %owner) : big_map bytes timestamp : timestamp : mutez : @storage
                DUP;        # @parameter%registerName : @parameter%registerName : pair (int %nonce) (address %owner) : big_map bytes timestamp : timestamp : mutez : @storage
                DUG 5;      # @parameter%registerName : pair (int %nonce) (address %owner) : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                CADR;       # string : pair (int %nonce) (address %owner) : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                PAIR %name; # pair (string %name) (pair (int %nonce) (address %owner)) : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                PACK;       # bytes : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                BLAKE2B;    # bytes : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                GET;        # option timestamp : timestamp : mutez : @parameter%registerName : @storage
                IF_SOME
                  {
                    # of_some: Get-item:366 # @some : timestamp : mutez : @parameter%registerName : @storage
                  }
                  {
                    PUSH string "Get-item:366"; # string : timestamp : mutez : @parameter%registerName : @storage
                    FAILWITH;   # FAILED
                  }; # @some : timestamp : mutez : @parameter%registerName : @storage
                DIG 4;      # @storage : @some : timestamp : mutez : @parameter%registerName
                DUP;        # @storage : @storage : @some : timestamp : mutez : @parameter%registerName
                DUG 5;      # @storage : @some : timestamp : mutez : @parameter%registerName : @storage
                CDDAR;      # int : @some : timestamp : mutez : @parameter%registerName : @storage
                ADD;        # timestamp : timestamp : mutez : @parameter%registerName : @storage
                COMPARE;    # int : mutez : @parameter%registerName : @storage
                LE;         # bool : mutez : @parameter%registerName : @storage
                IF
                  {}
                  {
                    PUSH string "Min commitment time not elapsed"; # string : mutez : @parameter%registerName : @storage
                    FAILWITH;   # FAILED
                  }; # mutez : @parameter%registerName : @storage
                # sp.verify(sp.add_seconds(self.data.commitments[sp.blake2b(sp.pack(sp.record(name = params.name, nonce = params.nonce, owner = sp.sender)))], self.data.maxCommitTime) > sp.now, message = 'Commitment expired') # mutez : @parameter%registerName : @storage
                NOW;        # timestamp : mutez : @parameter%registerName : @storage
                DIG 3;      # @storage : timestamp : mutez : @parameter%registerName
                DUP;        # @storage : @storage : timestamp : mutez : @parameter%registerName
                DUG 4;      # @storage : timestamp : mutez : @parameter%registerName : @storage
                CAADR;      # big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                SENDER;     # address : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                DIG 4;      # @parameter%registerName : address : big_map bytes timestamp : timestamp : mutez : @storage
                DUP;        # @parameter%registerName : @parameter%registerName : address : big_map bytes timestamp : timestamp : mutez : @storage
                DUG 5;      # @parameter%registerName : address : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                CDAR;       # int : address : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                PAIR %nonce %owner; # pair (int %nonce) (address %owner) : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                DIG 4;      # @parameter%registerName : pair (int %nonce) (address %owner) : big_map bytes timestamp : timestamp : mutez : @storage
                DUP;        # @parameter%registerName : @parameter%registerName : pair (int %nonce) (address %owner) : big_map bytes timestamp : timestamp : mutez : @storage
                DUG 5;      # @parameter%registerName : pair (int %nonce) (address %owner) : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                CADR;       # string : pair (int %nonce) (address %owner) : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                PAIR %name; # pair (string %name) (pair (int %nonce) (address %owner)) : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                PACK;       # bytes : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                BLAKE2B;    # bytes : big_map bytes timestamp : timestamp : mutez : @parameter%registerName : @storage
                GET;        # option timestamp : timestamp : mutez : @parameter%registerName : @storage
                IF_SOME
                  {
                    # of_some: Get-item:366 # @some : timestamp : mutez : @parameter%registerName : @storage
                  }
                  {
                    PUSH string "Get-item:366"; # string : timestamp : mutez : @parameter%registerName : @storage
                    FAILWITH;   # FAILED
                  }; # @some : timestamp : mutez : @parameter%registerName : @storage
                DIG 4;      # @storage : @some : timestamp : mutez : @parameter%registerName
                DUP;        # @storage : @storage : @some : timestamp : mutez : @parameter%registerName
                DUG 5;      # @storage : @some : timestamp : mutez : @parameter%registerName : @storage
                CDAAR;      # int : @some : timestamp : mutez : @parameter%registerName : @storage
                ADD;        # timestamp : timestamp : mutez : @parameter%registerName : @storage
                COMPARE;    # int : mutez : @parameter%registerName : @storage
                GT;         # bool : mutez : @parameter%registerName : @storage
                IF
                  {}
                  {
                    PUSH string "Commitment expired"; # string : mutez : @parameter%registerName : @storage
                    FAILWITH;   # FAILED
                  }; # mutez : @parameter%registerName : @storage
                # del self.data.commitments[sp.blake2b(sp.pack(sp.record(name = params.name, nonce = params.nonce, owner = sp.sender)))] # mutez : @parameter%registerName : @storage
                DIG 2;      # @storage : mutez : @parameter%registerName
                DUP;        # @storage : @storage : mutez : @parameter%registerName
                CDR;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @storage : mutez : @parameter%registerName
                SWAP;       # @storage : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                CAR;        # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                DUP;        # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                CDR;        # pair (address %domainManager) (int %interval) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                SWAP;       # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                CAR;        # pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                DUP;        # pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                CAR;        # big_map address string : pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                SWAP;       # pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp) : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                CDR;        # big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                NONE timestamp; # option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                SENDER;     # address : option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                DIG 7;      # @parameter%registerName : address : option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez
                DUP;        # @parameter%registerName : @parameter%registerName : address : option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez
                DUG 8;      # @parameter%registerName : address : option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                CDAR;       # int : address : option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                PAIR %nonce %owner; # pair (int %nonce) (address %owner) : option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                DIG 7;      # @parameter%registerName : pair (int %nonce) (address %owner) : option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez
                DUP;        # @parameter%registerName : @parameter%registerName : pair (int %nonce) (address %owner) : option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez
                DUG 8;      # @parameter%registerName : pair (int %nonce) (address %owner) : option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                CADR;       # string : pair (int %nonce) (address %owner) : option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                PAIR %name; # pair (string %name) (pair (int %nonce) (address %owner)) : option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                PACK;       # bytes : option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                BLAKE2B;    # bytes : option timestamp : big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                UPDATE;     # big_map bytes timestamp : big_map address string : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                SWAP;       # big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                PAIR;       # pair (big_map address string) (big_map bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                PAIR;       # pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : mutez : @parameter%registerName
                PAIR;       # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : @parameter%registerName
                DUG 2;      # mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                # sp.verify(sp.split_tokens(self.data.price, sp.as_nat(params.duration) // sp.as_nat(self.data.interval), 1) <= sp.amount, message = 'Insufficient payment') # mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                AMOUNT;     # mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                DIG 3;      # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : mutez : @parameter%registerName
                DUP;        # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : mutez : @parameter%registerName
                DUG 4;      # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                CDDDDR;     # mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                DIG 4;      # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : mutez : mutez : @parameter%registerName
                DUP;        # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : mutez : mutez : @parameter%registerName
                DUG 5;      # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                CADDR;      # int : mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                ISNAT;      # option nat : mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                IF_SOME
                  {}
                  {
                    PUSH unit Unit; # unit : mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                    FAILWITH;   # FAILED
                  }; # @some : mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                DIG 4;      # @parameter%registerName : @some : mutez : mutez : mutez : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                DUP;        # @parameter%registerName : @parameter%registerName : @some : mutez : mutez : mutez : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                DUG 5;      # @parameter%registerName : @some : mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                CAAR;       # int : @some : mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                ISNAT;      # option nat : @some : mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                IF_SOME
                  {}
                  {
                    PUSH unit Unit; # unit : @some : mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                    FAILWITH;   # FAILED
                  }; # @some : @some : mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                EDIV;       # option (pair nat nat) : mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                IF_SOME
                  {
                    CAR;        # nat : mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                  }
                  {
                    PUSH string "division by zero"; # string : mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                    FAILWITH;   # FAILED
                  }; # nat : mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                MUL;        # mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                COMPARE;    # int : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                LE;         # bool : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                IF
                  {}
                  {
                    PUSH string "Insufficient payment"; # string : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                    FAILWITH;   # FAILED
                  }; # mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                # cost.value = sp.split_tokens(self.data.price, sp.as_nat(params.duration) // sp.as_nat(self.data.interval), 1) # mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                DIG 2;      # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : @parameter%registerName
                DUP;        # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : @parameter%registerName
                DUG 3;      # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                CDDDDR;     # mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                DIG 3;      # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : mutez : @parameter%registerName
                DUP;        # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : mutez : @parameter%registerName
                DUG 4;      # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                CADDR;      # int : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                ISNAT;      # option nat : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                IF_SOME
                  {}
                  {
                    PUSH unit Unit; # unit : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                    FAILWITH;   # FAILED
                  }; # @some : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                DIG 3;      # @parameter%registerName : @some : mutez : mutez : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                DUP;        # @parameter%registerName : @parameter%registerName : @some : mutez : mutez : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                DUG 4;      # @parameter%registerName : @some : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                CAAR;       # int : @some : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                ISNAT;      # option nat : @some : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                IF_SOME
                  {}
                  {
                    PUSH unit Unit; # unit : @some : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                    FAILWITH;   # FAILED
                  }; # @some : @some : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                EDIV;       # option (pair nat nat) : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                IF_SOME
                  {
                    CAR;        # nat : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                  }
                  {
                    PUSH string "division by zero"; # string : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                    FAILWITH;   # FAILED
                  }; # nat : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                DIG 2;      # mutez : nat : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                DROP;       # nat : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                MUL;        # mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                # self.data.nameRegistry[params.name] = sp.record(modified = False, name = params.name, owner = sp.sender, registeredAt = sp.now, registrationPeriod = params.duration, resolver = params.resolver) # mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                DIG 2;      # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : @parameter%registerName
                DUP;        # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : @parameter%registerName
                CAR;        # pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : mutez : @parameter%registerName
                SWAP;       # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                CDR;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                DUP;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                CAR;        # pair (int %maxCommitTime) (int %maxDuration) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                SWAP;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                CDR;        # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                DUP;        # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                CAR;        # int : pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                SWAP;       # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                CDR;        # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                DUP;        # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                CDR;        # mutez : pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                SWAP;       # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                CAR;        # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                DIG 6;      # @parameter%registerName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez
                DUP;        # @parameter%registerName : @parameter%registerName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez
                DUG 7;      # @parameter%registerName : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                CDDR;       # address : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                DIG 7;      # @parameter%registerName : address : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez
                DUP;        # @parameter%registerName : @parameter%registerName : address : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez
                DUG 8;      # @parameter%registerName : address : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                CAAR;       # int : address : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                PAIR %registrationPeriod %resolver; # pair (int %registrationPeriod) (address %resolver) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                NOW;        # timestamp : pair (int %registrationPeriod) (address %resolver) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                PAIR %registeredAt; # pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                SENDER;     # address : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                DIG 8;      # @parameter%registerName : address : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez
                DUP;        # @parameter%registerName : @parameter%registerName : address : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez
                DUG 9;      # @parameter%registerName : address : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                CADR;       # string : address : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                PAIR %name %owner; # pair (string %name) (address %owner) : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                PUSH bool False; # bool : pair (string %name) (address %owner) : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                PAIR %modified; # pair (bool %modified) (pair (string %name) (address %owner)) : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                PAIR;       # pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                SOME;       # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                DIG 7;      # @parameter%registerName : option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez
                DUP;        # @parameter%registerName : @parameter%registerName : option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez
                DUG 8;      # @parameter%registerName : option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                CADR;       # string : option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                UPDATE;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                PAIR;       # pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                SWAP;       # int : pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                PAIR;       # pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                SWAP;       # pair (int %maxCommitTime) (int %maxDuration) : pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                PAIR;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%registerName
                SWAP;       # pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                PAIR;       # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))) : mutez : @parameter%registerName
                DUG 2;      # mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                # self.data.addressRegistry[params.resolver] = params.name # mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                DIG 2;      # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))) : mutez : @parameter%registerName
                DUP;        # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))) : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))) : mutez : @parameter%registerName
                CDR;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))) : mutez : @parameter%registerName
                SWAP;       # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                CAR;        # pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                DUP;        # pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                CDR;        # pair (address %domainManager) (int %interval) : pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                SWAP;       # pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                CAR;        # pair (big_map address string) (big_map bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                DUP;        # pair (big_map address string) (big_map bytes timestamp) : pair (big_map address string) (big_map bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                CDR;        # big_map bytes timestamp : pair (big_map address string) (big_map bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                SWAP;       # pair (big_map address string) (big_map bytes timestamp) : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                CAR;        # big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                DIG 5;      # @parameter%registerName : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez
                DUP;        # @parameter%registerName : @parameter%registerName : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez
                DUG 6;      # @parameter%registerName : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                CADR;       # string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                SOME;       # option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                DIG 6;      # @parameter%registerName : option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez
                DUP;        # @parameter%registerName : @parameter%registerName : option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez
                DUG 7;      # @parameter%registerName : option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                CDDR;       # address : option string : big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                UPDATE;     # big_map address string : big_map bytes timestamp : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                PAIR;       # pair (big_map address string) (big_map bytes timestamp) : pair (address %domainManager) (int %interval) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                PAIR;       # pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : mutez : @parameter%registerName
                PAIR;       # pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))) : mutez : @parameter%registerName
                DUG 2;      # mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                # if cost.value < sp.amount: # mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                DUP;        # mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                AMOUNT;     # mutez : mutez : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                COMPARE;    # int : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                GT;         # bool : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                IF
                  {
                    # sp.send(sp.sender, sp.amount - cost.value) # mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                    NIL operation; # list operation : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                    SENDER;     # address : list operation : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                    CONTRACT unit; # option (contract unit) : list operation : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                    IF_SOME
                      {}
                      {
                        PUSH unit Unit; # unit : list operation : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                        FAILWITH;   # FAILED
                      }; # @some : list operation : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                    DIG 2;      # mutez : @some : list operation : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                    DUP;        # mutez : mutez : @some : list operation : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                    DUG 3;      # mutez : @some : list operation : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                    AMOUNT;     # mutez : mutez : @some : list operation : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                    SUB;        # mutez : @some : list operation : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                    PUSH unit Unit; # unit : mutez : @some : list operation : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                    TRANSFER_TOKENS; # operation : list operation : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                    CONS;       # list operation : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                  }
                  {
                    NIL operation; # list operation : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                  }; # list operation : mutez : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                SWAP;       # mutez : list operation : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                DROP;       # list operation : @parameter%registerName : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                SWAP;       # @parameter%registerName : list operation : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                DROP;       # list operation : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
              }
              {
                # Entry point: sendAddressInfo # @parameter%sendAddressInfo : @storage
                # sp.verify(self.data.addressRegistry.contains(params.addr), message = 'Address is not in registry') # @parameter%sendAddressInfo : @storage
                SWAP;       # @storage : @parameter%sendAddressInfo
                DUP;        # @storage : @storage : @parameter%sendAddressInfo
                DUG 2;      # @storage : @parameter%sendAddressInfo : @storage
                CAAAR;      # big_map address string : @parameter%sendAddressInfo : @storage
                SWAP;       # @parameter%sendAddressInfo : big_map address string : @storage
                DUP;        # @parameter%sendAddressInfo : @parameter%sendAddressInfo : big_map address string : @storage
                DUG 2;      # @parameter%sendAddressInfo : big_map address string : @parameter%sendAddressInfo : @storage
                CAR;        # address : big_map address string : @parameter%sendAddressInfo : @storage
                MEM;        # bool : @parameter%sendAddressInfo : @storage
                IF
                  {}
                  {
                    PUSH string "Address is not in registry"; # string : @parameter%sendAddressInfo : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%sendAddressInfo : @storage
                # sp.transfer(sp.record(info = self.data.nameRegistry[self.data.addressRegistry[params.addr]], name = self.data.addressRegistry[params.addr]), sp.tez(0), params.k) # @parameter%sendAddressInfo : @storage
                DUP;        # @parameter%sendAddressInfo : @parameter%sendAddressInfo : @storage
                CDR;        # contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : @parameter%sendAddressInfo : @storage
                NIL operation; # list operation : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : @parameter%sendAddressInfo : @storage
                SWAP;       # contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo : @storage
                PUSH mutez 0; # mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo : @storage
                DIG 4;      # @storage : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo
                DUP;        # @storage : @storage : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo
                DUG 5;      # @storage : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo : @storage
                CAAAR;      # big_map address string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo : @storage
                DIG 4;      # @parameter%sendAddressInfo : big_map address string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                DUP;        # @parameter%sendAddressInfo : @parameter%sendAddressInfo : big_map address string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                DUG 5;      # @parameter%sendAddressInfo : big_map address string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo : @storage
                CAR;        # address : big_map address string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo : @storage
                GET;        # option string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo : @storage
                IF_SOME
                  {
                    # of_some: Get-item:141 # @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo : @storage
                  }
                  {
                    PUSH string "Get-item:141"; # string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo : @storage
                    FAILWITH;   # FAILED
                  }; # @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo : @storage
                DIG 5;      # @storage : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo
                DUP;        # @storage : @storage : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo
                DUG 6;      # @storage : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo : @storage
                CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo : @storage
                DIG 6;      # @storage : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo
                DUP;        # @storage : @storage : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo
                DUG 7;      # @storage : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo : @storage
                CAAAR;      # big_map address string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendAddressInfo : @storage
                DIG 6;      # @parameter%sendAddressInfo : big_map address string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                CAR;        # address : big_map address string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                GET;        # option string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                IF_SOME
                  {
                    # of_some: Get-item:141 # @some : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                  }
                  {
                    PUSH string "Get-item:141"; # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                    FAILWITH;   # FAILED
                  }; # @some : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                IF_SOME
                  {
                    # of_some: Get-item:142 # @some : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                  }
                  {
                    PUSH string "Get-item:142"; # string : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                    FAILWITH;   # FAILED
                  }; # @some : @some : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                PAIR %info %name; # pair (@some %info) (@some %name) : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                TRANSFER_TOKENS; # operation : list operation : @storage
                CONS;       # list operation : @storage
              }; # list operation : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
          }; # list operation : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                # Entry point: sendNameInfo # @parameter%sendNameInfo : @storage
                # sp.verify(self.data.nameRegistry.contains(params.name), message = 'Name is not in registry') # @parameter%sendNameInfo : @storage
                SWAP;       # @storage : @parameter%sendNameInfo
                DUP;        # @storage : @storage : @parameter%sendNameInfo
                DUG 2;      # @storage : @parameter%sendNameInfo : @storage
                CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%sendNameInfo : @storage
                SWAP;       # @parameter%sendNameInfo : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUP;        # @parameter%sendNameInfo : @parameter%sendNameInfo : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUG 2;      # @parameter%sendNameInfo : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%sendNameInfo : @storage
                CDR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%sendNameInfo : @storage
                MEM;        # bool : @parameter%sendNameInfo : @storage
                IF
                  {}
                  {
                    PUSH string "Name is not in registry"; # string : @parameter%sendNameInfo : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%sendNameInfo : @storage
                # sp.transfer(sp.record(info = self.data.nameRegistry[params.name], name = params.name), sp.tez(0), params.k) # @parameter%sendNameInfo : @storage
                DUP;        # @parameter%sendNameInfo : @parameter%sendNameInfo : @storage
                CAR;        # contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : @parameter%sendNameInfo : @storage
                NIL operation; # list operation : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : @parameter%sendNameInfo : @storage
                SWAP;       # contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendNameInfo : @storage
                PUSH mutez 0; # mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendNameInfo : @storage
                DIG 3;      # @parameter%sendNameInfo : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                DUP;        # @parameter%sendNameInfo : @parameter%sendNameInfo : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                DUG 4;      # @parameter%sendNameInfo : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendNameInfo : @storage
                CDR;        # string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendNameInfo : @storage
                DIG 5;      # @storage : string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendNameInfo
                DUP;        # @storage : @storage : string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendNameInfo
                DUG 6;      # @storage : string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendNameInfo : @storage
                CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @parameter%sendNameInfo : @storage
                DIG 5;      # @parameter%sendNameInfo : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                CDR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                IF_SOME
                  {
                    # of_some: Get-item:130 # @some : string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                  }
                  {
                    PUSH string "Get-item:130"; # string : string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                    FAILWITH;   # FAILED
                  }; # @some : string : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                PAIR %info %name; # pair (@some %info) (string %name) : mutez : contract (pair (pair %info (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) (string %name)) : list operation : @storage
                TRANSFER_TOKENS; # operation : list operation : @storage
                CONS;       # list operation : @storage
              }
              {
                # Entry point: setCommitmentAges # @parameter%setCommitmentAges : @storage
                # sp.verify(sp.sender == self.data.domainManager, message = 'Invalid permissions') # @parameter%setCommitmentAges : @storage
                SWAP;       # @storage : @parameter%setCommitmentAges
                DUP;        # @storage : @storage : @parameter%setCommitmentAges
                DUG 2;      # @storage : @parameter%setCommitmentAges : @storage
                CADAR;      # address : @parameter%setCommitmentAges : @storage
                SENDER;     # address : address : @parameter%setCommitmentAges : @storage
                COMPARE;    # int : @parameter%setCommitmentAges : @storage
                EQ;         # bool : @parameter%setCommitmentAges : @storage
                IF
                  {}
                  {
                    PUSH string "Invalid permissions"; # string : @parameter%setCommitmentAges : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%setCommitmentAges : @storage
                # self.data.minCommitTime = params._minCommitTime # @parameter%setCommitmentAges : @storage
                SWAP;       # @storage : @parameter%setCommitmentAges
                DUP;        # @storage : @storage : @parameter%setCommitmentAges
                CAR;        # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @storage : @parameter%setCommitmentAges
                SWAP;       # @storage : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                CDR;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                DUP;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                CAR;        # pair (int %maxCommitTime) (int %maxDuration) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                SWAP;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                CDDR;       # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                DIG 3;      # @parameter%setCommitmentAges : pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                DUP;        # @parameter%setCommitmentAges : @parameter%setCommitmentAges : pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                DUG 4;      # @parameter%setCommitmentAges : pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                CDR;        # int : pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                PAIR;       # pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                SWAP;       # pair (int %maxCommitTime) (int %maxDuration) : pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                PAIR;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                SWAP;       # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : @parameter%setCommitmentAges
                PAIR;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : @parameter%setCommitmentAges
                SWAP;       # @parameter%setCommitmentAges : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                # self.data.maxCommitTime = params._maxCommitTime # @parameter%setCommitmentAges : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                SWAP;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : @parameter%setCommitmentAges
                DUP;        # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : @parameter%setCommitmentAges
                CAR;        # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : @parameter%setCommitmentAges
                SWAP;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                CDR;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                DUP;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                CDR;        # pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                SWAP;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                CADR;       # int : pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%setCommitmentAges
                DIG 3;      # @parameter%setCommitmentAges : int : pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                CAR;        # int : int : pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                PAIR;       # pair int int : pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                PAIR;       # pair (pair int int) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                SWAP;       # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair int int) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))
                PAIR;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair int int) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
                NIL operation; # list operation : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair int int) (pair int (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
              }; # list operation : @storage
          }
          {
            IF_LEFT
              {
                # Entry point: transferNameOwnership # @parameter%transferNameOwnership : @storage
                # sp.verify(self.data.nameRegistry.contains(params.name), message = 'Name not registered') # @parameter%transferNameOwnership : @storage
                SWAP;       # @storage : @parameter%transferNameOwnership
                DUP;        # @storage : @storage : @parameter%transferNameOwnership
                DUG 2;      # @storage : @parameter%transferNameOwnership : @storage
                CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%transferNameOwnership : @storage
                SWAP;       # @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUP;        # @parameter%transferNameOwnership : @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUG 2;      # @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%transferNameOwnership : @storage
                CAR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%transferNameOwnership : @storage
                MEM;        # bool : @parameter%transferNameOwnership : @storage
                IF
                  {}
                  {
                    PUSH string "Name not registered"; # string : @parameter%transferNameOwnership : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%transferNameOwnership : @storage
                # sp.verify(~ (sp.now > sp.add_seconds(self.data.nameRegistry[params.name].registeredAt, self.data.nameRegistry[params.name].registrationPeriod)), message = 'Name registration has expired') # @parameter%transferNameOwnership : @storage
                SWAP;       # @storage : @parameter%transferNameOwnership
                DUP;        # @storage : @storage : @parameter%transferNameOwnership
                DUG 2;      # @storage : @parameter%transferNameOwnership : @storage
                CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%transferNameOwnership : @storage
                SWAP;       # @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUP;        # @parameter%transferNameOwnership : @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUG 2;      # @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%transferNameOwnership : @storage
                CAR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%transferNameOwnership : @storage
                GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%transferNameOwnership : @storage
                IF_SOME
                  {
                    # of_some: Get-item:95 # @some : @parameter%transferNameOwnership : @storage
                  }
                  {
                    PUSH string "Get-item:95"; # string : @parameter%transferNameOwnership : @storage
                    FAILWITH;   # FAILED
                  }; # @some : @parameter%transferNameOwnership : @storage
                CDAR;       # timestamp : @parameter%transferNameOwnership : @storage
                DIG 2;      # @storage : timestamp : @parameter%transferNameOwnership
                DUP;        # @storage : @storage : timestamp : @parameter%transferNameOwnership
                DUG 3;      # @storage : timestamp : @parameter%transferNameOwnership : @storage
                CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%transferNameOwnership : @storage
                DIG 2;      # @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @storage
                DUP;        # @parameter%transferNameOwnership : @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @storage
                DUG 3;      # @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%transferNameOwnership : @storage
                CAR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%transferNameOwnership : @storage
                GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%transferNameOwnership : @storage
                IF_SOME
                  {
                    # of_some: Get-item:95 # @some : timestamp : @parameter%transferNameOwnership : @storage
                  }
                  {
                    PUSH string "Get-item:95"; # string : timestamp : @parameter%transferNameOwnership : @storage
                    FAILWITH;   # FAILED
                  }; # @some : timestamp : @parameter%transferNameOwnership : @storage
                CDDAR;      # int : timestamp : @parameter%transferNameOwnership : @storage
                ADD;        # timestamp : @parameter%transferNameOwnership : @storage
                NOW;        # timestamp : timestamp : @parameter%transferNameOwnership : @storage
                COMPARE;    # int : @parameter%transferNameOwnership : @storage
                GT;         # bool : @parameter%transferNameOwnership : @storage
                IF
                  {
                    PUSH string "Name registration has expired"; # string : @parameter%transferNameOwnership : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%transferNameOwnership : @storage
                # sp.verify((sp.sender == self.data.nameRegistry[params.name].owner) | (sp.sender == self.data.domainManager), message = 'Invalid permissions') # @parameter%transferNameOwnership : @storage
                SWAP;       # @storage : @parameter%transferNameOwnership
                DUP;        # @storage : @storage : @parameter%transferNameOwnership
                DUG 2;      # @storage : @parameter%transferNameOwnership : @storage
                CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%transferNameOwnership : @storage
                SWAP;       # @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUP;        # @parameter%transferNameOwnership : @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                DUG 2;      # @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%transferNameOwnership : @storage
                CAR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%transferNameOwnership : @storage
                GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%transferNameOwnership : @storage
                IF_SOME
                  {
                    # of_some: Get-item:95 # @some : @parameter%transferNameOwnership : @storage
                  }
                  {
                    PUSH string "Get-item:95"; # string : @parameter%transferNameOwnership : @storage
                    FAILWITH;   # FAILED
                  }; # @some : @parameter%transferNameOwnership : @storage
                CADDR;      # address : @parameter%transferNameOwnership : @storage
                SENDER;     # address : address : @parameter%transferNameOwnership : @storage
                COMPARE;    # int : @parameter%transferNameOwnership : @storage
                EQ;         # bool : @parameter%transferNameOwnership : @storage
                IF
                  {
                    PUSH bool True; # bool : @parameter%transferNameOwnership : @storage
                  }
                  {
                    SWAP;       # @storage : @parameter%transferNameOwnership
                    DUP;        # @storage : @storage : @parameter%transferNameOwnership
                    DUG 2;      # @storage : @parameter%transferNameOwnership : @storage
                    CADAR;      # address : @parameter%transferNameOwnership : @storage
                    SENDER;     # address : address : @parameter%transferNameOwnership : @storage
                    COMPARE;    # int : @parameter%transferNameOwnership : @storage
                    EQ;         # bool : @parameter%transferNameOwnership : @storage
                  }; # bool : @parameter%transferNameOwnership : @storage
                IF
                  {}
                  {
                    PUSH string "Invalid permissions"; # string : @parameter%transferNameOwnership : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%transferNameOwnership : @storage
                # self.data.nameRegistry[params.name].owner = params.newNameOwner # @parameter%transferNameOwnership : @storage
                SWAP;       # @storage : @parameter%transferNameOwnership
                DUP;        # @storage : @storage : @parameter%transferNameOwnership
                CAR;        # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @storage : @parameter%transferNameOwnership
                SWAP;       # @storage : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CDR;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DUP;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CAR;        # pair (int %maxCommitTime) (int %maxDuration) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SWAP;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CDR;        # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DUP;        # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CAR;        # int : pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SWAP;       # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CDR;        # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DUP;        # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CDR;        # mutez : pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SWAP;       # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CAR;        # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DUP;        # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DIG 6;      # @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                DUP;        # @parameter%transferNameOwnership : @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                DUG 7;      # @parameter%transferNameOwnership : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CAR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DUP;        # string : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DUG 2;      # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                IF_SOME
                  {
                    # of_some: set_in_top-any # @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                  }
                  {
                    PUSH string "set_in_top-any"; # string : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                    FAILWITH;   # FAILED
                  }; # @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DUP;        # @some : @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CDR;        # pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SWAP;       # @some : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CAR;        # pair (bool %modified) (pair (string %name) (address %owner)) : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DUP;        # pair (bool %modified) (pair (string %name) (address %owner)) : pair (bool %modified) (pair (string %name) (address %owner)) : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CAR;        # bool : pair (bool %modified) (pair (string %name) (address %owner)) : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SWAP;       # pair (bool %modified) (pair (string %name) (address %owner)) : bool : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CDAR;       # string : bool : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DIG 9;      # @parameter%transferNameOwnership : string : bool : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                DUP;        # @parameter%transferNameOwnership : @parameter%transferNameOwnership : string : bool : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                DUG 10;     # @parameter%transferNameOwnership : string : bool : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CDR;        # address : string : bool : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SWAP;       # string : address : bool : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                PAIR;       # pair string address : bool : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SWAP;       # bool : pair string address : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                PAIR;       # pair bool (pair string address) : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                PAIR;       # pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SOME;       # option (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SWAP;       # string : option (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                UPDATE;     # big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                PAIR;       # pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SWAP;       # int : pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                PAIR;       # pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SWAP;       # pair (int %maxCommitTime) (int %maxDuration) : pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                PAIR;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SWAP;       # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : @parameter%transferNameOwnership
                PAIR;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))) : @parameter%transferNameOwnership
                SWAP;       # @parameter%transferNameOwnership : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                # self.data.nameRegistry[params.name].modified = True # @parameter%transferNameOwnership : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                SWAP;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))) : @parameter%transferNameOwnership
                DUP;        # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))) : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))) : @parameter%transferNameOwnership
                CAR;        # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))) : @parameter%transferNameOwnership
                SWAP;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CDR;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DUP;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CAR;        # pair (int %maxCommitTime) (int %maxDuration) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SWAP;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CDR;        # pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DUP;        # pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez) : pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CAR;        # int : pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SWAP;       # pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CDR;        # pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DUP;        # pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez : pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CDR;        # mutez : pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                SWAP;       # pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                CAR;        # big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DUP;        # big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%transferNameOwnership
                DIG 6;      # @parameter%transferNameOwnership : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                CAR;        # string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                DUP;        # string : string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                DUG 2;      # string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                GET;        # option (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                IF_SOME
                  {
                    # of_some: set_in_top-any # @some : string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                  }
                  {
                    PUSH string "set_in_top-any"; # string : string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    FAILWITH;   # FAILED
                  }; # @some : string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                DUP;        # @some : @some : string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                CDR;        # pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : @some : string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                SWAP;       # @some : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                CADR;       # pair string address : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                PUSH bool True; # bool : pair string address : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                PAIR;       # pair bool (pair string address) : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                PAIR;       # pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))) : string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                SOME;       # option (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : string : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                SWAP;       # string : option (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                UPDATE;     # big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                PAIR;       # pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                SWAP;       # int : pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                PAIR;       # pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                SWAP;       # pair (int %maxCommitTime) (int %maxDuration) : pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                PAIR;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                SWAP;       # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez))
                PAIR;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
                NIL operation; # list operation : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
              }
              {
                IF_LEFT
                  {
                    # Entry point: updateRegistrationPeriod # @parameter%updateRegistrationPeriod : @storage
                    # sp.verify(self.data.nameRegistry.contains(params.name), message = 'Name not registered') # @parameter%updateRegistrationPeriod : @storage
                    SWAP;       # @storage : @parameter%updateRegistrationPeriod
                    DUP;        # @storage : @storage : @parameter%updateRegistrationPeriod
                    DUG 2;      # @storage : @parameter%updateRegistrationPeriod : @storage
                    CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateRegistrationPeriod : @storage
                    SWAP;       # @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                    DUP;        # @parameter%updateRegistrationPeriod : @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                    DUG 2;      # @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateRegistrationPeriod : @storage
                    CDR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateRegistrationPeriod : @storage
                    MEM;        # bool : @parameter%updateRegistrationPeriod : @storage
                    IF
                      {}
                      {
                        PUSH string "Name not registered"; # string : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%updateRegistrationPeriod : @storage
                    # sp.verify(~ (sp.now > sp.add_seconds(self.data.nameRegistry[params.name].registeredAt, self.data.nameRegistry[params.name].registrationPeriod)), message = 'Name registration has expired') # @parameter%updateRegistrationPeriod : @storage
                    SWAP;       # @storage : @parameter%updateRegistrationPeriod
                    DUP;        # @storage : @storage : @parameter%updateRegistrationPeriod
                    DUG 2;      # @storage : @parameter%updateRegistrationPeriod : @storage
                    CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateRegistrationPeriod : @storage
                    SWAP;       # @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                    DUP;        # @parameter%updateRegistrationPeriod : @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                    DUG 2;      # @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateRegistrationPeriod : @storage
                    CDR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateRegistrationPeriod : @storage
                    GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateRegistrationPeriod : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:76 # @some : @parameter%updateRegistrationPeriod : @storage
                      }
                      {
                        PUSH string "Get-item:76"; # string : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%updateRegistrationPeriod : @storage
                    CDAR;       # timestamp : @parameter%updateRegistrationPeriod : @storage
                    DIG 2;      # @storage : timestamp : @parameter%updateRegistrationPeriod
                    DUP;        # @storage : @storage : timestamp : @parameter%updateRegistrationPeriod
                    DUG 3;      # @storage : timestamp : @parameter%updateRegistrationPeriod : @storage
                    CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%updateRegistrationPeriod : @storage
                    DIG 2;      # @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @storage
                    DUP;        # @parameter%updateRegistrationPeriod : @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @storage
                    DUG 3;      # @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%updateRegistrationPeriod : @storage
                    CDR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%updateRegistrationPeriod : @storage
                    GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%updateRegistrationPeriod : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:76 # @some : timestamp : @parameter%updateRegistrationPeriod : @storage
                      }
                      {
                        PUSH string "Get-item:76"; # string : timestamp : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }; # @some : timestamp : @parameter%updateRegistrationPeriod : @storage
                    CDDAR;      # int : timestamp : @parameter%updateRegistrationPeriod : @storage
                    ADD;        # timestamp : @parameter%updateRegistrationPeriod : @storage
                    NOW;        # timestamp : timestamp : @parameter%updateRegistrationPeriod : @storage
                    COMPARE;    # int : @parameter%updateRegistrationPeriod : @storage
                    GT;         # bool : @parameter%updateRegistrationPeriod : @storage
                    IF
                      {
                        PUSH string "Name registration has expired"; # string : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%updateRegistrationPeriod : @storage
                    # sp.verify((sp.sender == self.data.nameRegistry[params.name].owner) | (sp.sender == self.data.domainManager), message = 'Invalid permissions') # @parameter%updateRegistrationPeriod : @storage
                    SWAP;       # @storage : @parameter%updateRegistrationPeriod
                    DUP;        # @storage : @storage : @parameter%updateRegistrationPeriod
                    DUG 2;      # @storage : @parameter%updateRegistrationPeriod : @storage
                    CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateRegistrationPeriod : @storage
                    SWAP;       # @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                    DUP;        # @parameter%updateRegistrationPeriod : @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                    DUG 2;      # @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateRegistrationPeriod : @storage
                    CDR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateRegistrationPeriod : @storage
                    GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateRegistrationPeriod : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:76 # @some : @parameter%updateRegistrationPeriod : @storage
                      }
                      {
                        PUSH string "Get-item:76"; # string : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%updateRegistrationPeriod : @storage
                    CADDR;      # address : @parameter%updateRegistrationPeriod : @storage
                    SENDER;     # address : address : @parameter%updateRegistrationPeriod : @storage
                    COMPARE;    # int : @parameter%updateRegistrationPeriod : @storage
                    EQ;         # bool : @parameter%updateRegistrationPeriod : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%updateRegistrationPeriod : @storage
                      }
                      {
                        SWAP;       # @storage : @parameter%updateRegistrationPeriod
                        DUP;        # @storage : @storage : @parameter%updateRegistrationPeriod
                        DUG 2;      # @storage : @parameter%updateRegistrationPeriod : @storage
                        CADAR;      # address : @parameter%updateRegistrationPeriod : @storage
                        SENDER;     # address : address : @parameter%updateRegistrationPeriod : @storage
                        COMPARE;    # int : @parameter%updateRegistrationPeriod : @storage
                        EQ;         # bool : @parameter%updateRegistrationPeriod : @storage
                      }; # bool : @parameter%updateRegistrationPeriod : @storage
                    IF
                      {}
                      {
                        PUSH string "Invalid permissions"; # string : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%updateRegistrationPeriod : @storage
                    # sp.verify((self.data.nameRegistry[params.name].registrationPeriod + params.duration) < self.data.maxDuration, message = 'Duration too long') # @parameter%updateRegistrationPeriod : @storage
                    SWAP;       # @storage : @parameter%updateRegistrationPeriod
                    DUP;        # @storage : @storage : @parameter%updateRegistrationPeriod
                    DUG 2;      # @storage : @parameter%updateRegistrationPeriod : @storage
                    CDADR;      # int : @parameter%updateRegistrationPeriod : @storage
                    SWAP;       # @parameter%updateRegistrationPeriod : int : @storage
                    DUP;        # @parameter%updateRegistrationPeriod : @parameter%updateRegistrationPeriod : int : @storage
                    DUG 2;      # @parameter%updateRegistrationPeriod : int : @parameter%updateRegistrationPeriod : @storage
                    CAR;        # int : int : @parameter%updateRegistrationPeriod : @storage
                    DIG 3;      # @storage : int : int : @parameter%updateRegistrationPeriod
                    DUP;        # @storage : @storage : int : int : @parameter%updateRegistrationPeriod
                    DUG 4;      # @storage : int : int : @parameter%updateRegistrationPeriod : @storage
                    CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : int : int : @parameter%updateRegistrationPeriod : @storage
                    DIG 3;      # @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : int : int : @storage
                    DUP;        # @parameter%updateRegistrationPeriod : @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : int : int : @storage
                    DUG 4;      # @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : int : int : @parameter%updateRegistrationPeriod : @storage
                    CDR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : int : int : @parameter%updateRegistrationPeriod : @storage
                    GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : int : int : @parameter%updateRegistrationPeriod : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:76 # @some : int : int : @parameter%updateRegistrationPeriod : @storage
                      }
                      {
                        PUSH string "Get-item:76"; # string : int : int : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }; # @some : int : int : @parameter%updateRegistrationPeriod : @storage
                    CDDAR;      # int : int : int : @parameter%updateRegistrationPeriod : @storage
                    ADD;        # int : int : @parameter%updateRegistrationPeriod : @storage
                    COMPARE;    # int : @parameter%updateRegistrationPeriod : @storage
                    LT;         # bool : @parameter%updateRegistrationPeriod : @storage
                    IF
                      {}
                      {
                        PUSH string "Duration too long"; # string : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%updateRegistrationPeriod : @storage
                    # cost = sp.local("cost", sp.tez(0), sp.TMutez) # @parameter%updateRegistrationPeriod : @storage
                    PUSH mutez 0; # mutez : @parameter%updateRegistrationPeriod : @storage
                    # sp.verify(sp.split_tokens(self.data.price, sp.as_nat(params.duration) // sp.as_nat(self.data.interval), 1) <= sp.amount, message = 'Insufficient payment') # mutez : @parameter%updateRegistrationPeriod : @storage
                    AMOUNT;     # mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    DIG 3;      # @storage : mutez : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # @storage : @storage : mutez : mutez : @parameter%updateRegistrationPeriod
                    DUG 4;      # @storage : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    CDDDDR;     # mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    DIG 4;      # @storage : mutez : mutez : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # @storage : @storage : mutez : mutez : mutez : @parameter%updateRegistrationPeriod
                    DUG 5;      # @storage : mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    CADDR;      # int : mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    ISNAT;      # option nat : mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    IF_SOME
                      {}
                      {
                        PUSH unit Unit; # unit : mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }; # @some : mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    DIG 4;      # @parameter%updateRegistrationPeriod : @some : mutez : mutez : mutez : @storage
                    DUP;        # @parameter%updateRegistrationPeriod : @parameter%updateRegistrationPeriod : @some : mutez : mutez : mutez : @storage
                    DUG 5;      # @parameter%updateRegistrationPeriod : @some : mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    CAR;        # int : @some : mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    ISNAT;      # option nat : @some : mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    IF_SOME
                      {}
                      {
                        PUSH unit Unit; # unit : @some : mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @some : mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    EDIV;       # option (pair nat nat) : mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    IF_SOME
                      {
                        CAR;        # nat : mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                      }
                      {
                        PUSH string "division by zero"; # string : mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }; # nat : mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    MUL;        # mutez : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    COMPARE;    # int : mutez : @parameter%updateRegistrationPeriod : @storage
                    LE;         # bool : mutez : @parameter%updateRegistrationPeriod : @storage
                    IF
                      {}
                      {
                        PUSH string "Insufficient payment"; # string : mutez : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }; # mutez : @parameter%updateRegistrationPeriod : @storage
                    # cost.value = sp.split_tokens(self.data.price, sp.as_nat(params.duration) // sp.as_nat(self.data.interval), 1) # mutez : @parameter%updateRegistrationPeriod : @storage
                    DIG 2;      # @storage : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # @storage : @storage : mutez : @parameter%updateRegistrationPeriod
                    DUG 3;      # @storage : mutez : @parameter%updateRegistrationPeriod : @storage
                    CDDDDR;     # mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    DIG 3;      # @storage : mutez : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # @storage : @storage : mutez : mutez : @parameter%updateRegistrationPeriod
                    DUG 4;      # @storage : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    CADDR;      # int : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    ISNAT;      # option nat : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    IF_SOME
                      {}
                      {
                        PUSH unit Unit; # unit : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }; # @some : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    DIG 3;      # @parameter%updateRegistrationPeriod : @some : mutez : mutez : @storage
                    DUP;        # @parameter%updateRegistrationPeriod : @parameter%updateRegistrationPeriod : @some : mutez : mutez : @storage
                    DUG 4;      # @parameter%updateRegistrationPeriod : @some : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    CAR;        # int : @some : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    ISNAT;      # option nat : @some : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    IF_SOME
                      {}
                      {
                        PUSH unit Unit; # unit : @some : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @some : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    EDIV;       # option (pair nat nat) : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    IF_SOME
                      {
                        CAR;        # nat : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                      }
                      {
                        PUSH string "division by zero"; # string : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                        FAILWITH;   # FAILED
                      }; # nat : mutez : mutez : @parameter%updateRegistrationPeriod : @storage
                    DIG 2;      # mutez : nat : mutez : @parameter%updateRegistrationPeriod : @storage
                    DROP;       # nat : mutez : @parameter%updateRegistrationPeriod : @storage
                    MUL;        # mutez : @parameter%updateRegistrationPeriod : @storage
                    # self.data.nameRegistry[params.name].registrationPeriod = params.duration # mutez : @parameter%updateRegistrationPeriod : @storage
                    DIG 2;      # @storage : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # @storage : @storage : mutez : @parameter%updateRegistrationPeriod
                    CAR;        # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @storage : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # @storage : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CDR;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CAR;        # pair (int %maxCommitTime) (int %maxDuration) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CDR;        # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CAR;        # int : pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CDR;        # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CDR;        # mutez : pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CAR;        # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DIG 7;      # @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez
                    DUP;        # @parameter%updateRegistrationPeriod : @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez
                    DUG 8;      # @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CDR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # string : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUG 2;      # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    IF_SOME
                      {
                        # of_some: set_in_top-any # @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                      }
                      {
                        PUSH string "set_in_top-any"; # string : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                        FAILWITH;   # FAILED
                      }; # @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # @some : @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CAR;        # pair (bool %modified) (pair (string %name) (address %owner)) : @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # @some : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CDR;        # pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CAR;        # timestamp : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CDDR;       # address : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DIG 10;     # @parameter%updateRegistrationPeriod : address : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez
                    DUP;        # @parameter%updateRegistrationPeriod : @parameter%updateRegistrationPeriod : address : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez
                    DUG 11;     # @parameter%updateRegistrationPeriod : address : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CAR;        # int : address : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    PAIR;       # pair int address : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # timestamp : pair int address : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    PAIR;       # pair timestamp (pair int address) : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # pair (bool %modified) (pair (string %name) (address %owner)) : pair timestamp (pair int address) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    PAIR;       # pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SOME;       # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # string : option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    UPDATE;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    PAIR;       # pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # int : pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    PAIR;       # pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # pair (int %maxCommitTime) (int %maxDuration) : pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    PAIR;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : mutez : @parameter%updateRegistrationPeriod
                    PAIR;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : mutez : @parameter%updateRegistrationPeriod
                    DUG 2;      # mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    # self.data.nameRegistry[params.name].modified = True # mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    DIG 2;      # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : mutez : @parameter%updateRegistrationPeriod
                    CAR;        # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CDR;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CAR;        # pair (int %maxCommitTime) (int %maxDuration) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CDR;        # pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CAR;        # int : pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CDR;        # pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CDR;        # mutez : pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CAR;        # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DIG 7;      # @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez
                    DUP;        # @parameter%updateRegistrationPeriod : @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez
                    DUG 8;      # @parameter%updateRegistrationPeriod : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CDR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # string : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUG 2;      # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    IF_SOME
                      {
                        # of_some: set_in_top-any # @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                      }
                      {
                        PUSH string "set_in_top-any"; # string : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                        FAILWITH;   # FAILED
                      }; # @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # @some : @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CDR;        # pair timestamp (pair int address) : @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # @some : pair timestamp (pair int address) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    CADR;       # pair (string %name) (address %owner) : pair timestamp (pair int address) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    PUSH bool True; # bool : pair (string %name) (address %owner) : pair timestamp (pair int address) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    PAIR;       # pair bool (pair (string %name) (address %owner)) : pair timestamp (pair int address) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    PAIR;       # pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SOME;       # option (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # string : option (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    UPDATE;     # big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    PAIR;       # pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # int : pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    PAIR;       # pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # pair (int %maxCommitTime) (int %maxDuration) : pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    PAIR;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : mutez : @parameter%updateRegistrationPeriod
                    SWAP;       # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : mutez : @parameter%updateRegistrationPeriod
                    PAIR;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : mutez : @parameter%updateRegistrationPeriod
                    DUG 2;      # mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    # if cost.value < (sp.amount - self.data.price): # mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    DIG 2;      # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : mutez : @parameter%updateRegistrationPeriod
                    DUP;        # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : mutez : @parameter%updateRegistrationPeriod
                    DUG 3;      # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    CDDDDR;     # mutez : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    AMOUNT;     # mutez : mutez : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    SUB;        # mutez : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    SWAP;       # mutez : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    DUP;        # mutez : mutez : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    DUG 2;      # mutez : mutez : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    COMPARE;    # int : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    LT;         # bool : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    IF
                      {
                        # sp.send(sp.sender, sp.amount - cost.value) # mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                        NIL operation; # list operation : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                        SENDER;     # address : list operation : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                        CONTRACT unit; # option (contract unit) : list operation : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                        IF_SOME
                          {}
                          {
                            PUSH unit Unit; # unit : list operation : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                        DIG 2;      # mutez : @some : list operation : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                        DUP;        # mutez : mutez : @some : list operation : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                        DUG 3;      # mutez : @some : list operation : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                        AMOUNT;     # mutez : mutez : @some : list operation : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                        SUB;        # mutez : @some : list operation : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                        PUSH unit Unit; # unit : mutez : @some : list operation : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                        TRANSFER_TOKENS; # operation : list operation : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                        CONS;       # list operation : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                      }
                      {
                        NIL operation; # list operation : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                      }; # list operation : mutez : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    SWAP;       # mutez : list operation : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    DROP;       # list operation : @parameter%updateRegistrationPeriod : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    SWAP;       # @parameter%updateRegistrationPeriod : list operation : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    DROP;       # list operation : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                  }
                  {
                    # Entry point: updateResolver # @parameter%updateResolver : @storage
                    # sp.verify(self.data.nameRegistry.contains(params.name), message = 'Name not registered') # @parameter%updateResolver : @storage
                    SWAP;       # @storage : @parameter%updateResolver
                    DUP;        # @storage : @storage : @parameter%updateResolver
                    DUG 2;      # @storage : @parameter%updateResolver : @storage
                    CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateResolver : @storage
                    SWAP;       # @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                    DUP;        # @parameter%updateResolver : @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                    DUG 2;      # @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateResolver : @storage
                    CAR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateResolver : @storage
                    MEM;        # bool : @parameter%updateResolver : @storage
                    IF
                      {}
                      {
                        PUSH string "Name not registered"; # string : @parameter%updateResolver : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%updateResolver : @storage
                    # sp.verify(~ (sp.now > sp.add_seconds(self.data.nameRegistry[params.name].registeredAt, self.data.nameRegistry[params.name].registrationPeriod)), message = 'Name registration has expired') # @parameter%updateResolver : @storage
                    SWAP;       # @storage : @parameter%updateResolver
                    DUP;        # @storage : @storage : @parameter%updateResolver
                    DUG 2;      # @storage : @parameter%updateResolver : @storage
                    CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateResolver : @storage
                    SWAP;       # @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                    DUP;        # @parameter%updateResolver : @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                    DUG 2;      # @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateResolver : @storage
                    CAR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateResolver : @storage
                    GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateResolver : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:103 # @some : @parameter%updateResolver : @storage
                      }
                      {
                        PUSH string "Get-item:103"; # string : @parameter%updateResolver : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%updateResolver : @storage
                    CDAR;       # timestamp : @parameter%updateResolver : @storage
                    DIG 2;      # @storage : timestamp : @parameter%updateResolver
                    DUP;        # @storage : @storage : timestamp : @parameter%updateResolver
                    DUG 3;      # @storage : timestamp : @parameter%updateResolver : @storage
                    CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%updateResolver : @storage
                    DIG 2;      # @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @storage
                    DUP;        # @parameter%updateResolver : @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @storage
                    DUG 3;      # @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%updateResolver : @storage
                    CAR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%updateResolver : @storage
                    GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : timestamp : @parameter%updateResolver : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:103 # @some : timestamp : @parameter%updateResolver : @storage
                      }
                      {
                        PUSH string "Get-item:103"; # string : timestamp : @parameter%updateResolver : @storage
                        FAILWITH;   # FAILED
                      }; # @some : timestamp : @parameter%updateResolver : @storage
                    CDDAR;      # int : timestamp : @parameter%updateResolver : @storage
                    ADD;        # timestamp : @parameter%updateResolver : @storage
                    NOW;        # timestamp : timestamp : @parameter%updateResolver : @storage
                    COMPARE;    # int : @parameter%updateResolver : @storage
                    GT;         # bool : @parameter%updateResolver : @storage
                    IF
                      {
                        PUSH string "Name registration has expired"; # string : @parameter%updateResolver : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%updateResolver : @storage
                    # sp.verify((sp.sender == self.data.nameRegistry[params.name].owner) | (sp.sender == self.data.domainManager), message = 'Invalid permissions') # @parameter%updateResolver : @storage
                    SWAP;       # @storage : @parameter%updateResolver
                    DUP;        # @storage : @storage : @parameter%updateResolver
                    DUG 2;      # @storage : @parameter%updateResolver : @storage
                    CDDDAR;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateResolver : @storage
                    SWAP;       # @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                    DUP;        # @parameter%updateResolver : @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @storage
                    DUG 2;      # @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateResolver : @storage
                    CAR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateResolver : @storage
                    GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : @parameter%updateResolver : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:103 # @some : @parameter%updateResolver : @storage
                      }
                      {
                        PUSH string "Get-item:103"; # string : @parameter%updateResolver : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%updateResolver : @storage
                    CADDR;      # address : @parameter%updateResolver : @storage
                    SENDER;     # address : address : @parameter%updateResolver : @storage
                    COMPARE;    # int : @parameter%updateResolver : @storage
                    EQ;         # bool : @parameter%updateResolver : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%updateResolver : @storage
                      }
                      {
                        SWAP;       # @storage : @parameter%updateResolver
                        DUP;        # @storage : @storage : @parameter%updateResolver
                        DUG 2;      # @storage : @parameter%updateResolver : @storage
                        CADAR;      # address : @parameter%updateResolver : @storage
                        SENDER;     # address : address : @parameter%updateResolver : @storage
                        COMPARE;    # int : @parameter%updateResolver : @storage
                        EQ;         # bool : @parameter%updateResolver : @storage
                      }; # bool : @parameter%updateResolver : @storage
                    IF
                      {}
                      {
                        PUSH string "Invalid permissions"; # string : @parameter%updateResolver : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%updateResolver : @storage
                    # self.data.nameRegistry[params.name].resolver = params.resolver # @parameter%updateResolver : @storage
                    SWAP;       # @storage : @parameter%updateResolver
                    DUP;        # @storage : @storage : @parameter%updateResolver
                    CAR;        # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @storage : @parameter%updateResolver
                    SWAP;       # @storage : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CDR;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DUP;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CAR;        # pair (int %maxCommitTime) (int %maxDuration) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CDR;        # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DUP;        # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CAR;        # int : pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CDR;        # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DUP;        # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CDR;        # mutez : pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CAR;        # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DUP;        # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DIG 6;      # @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    DUP;        # @parameter%updateResolver : @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    DUG 7;      # @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CAR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DUP;        # string : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DUG 2;      # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    IF_SOME
                      {
                        # of_some: set_in_top-any # @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                      }
                      {
                        PUSH string "set_in_top-any"; # string : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                        FAILWITH;   # FAILED
                      }; # @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DUP;        # @some : @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CAR;        # pair (bool %modified) (pair (string %name) (address %owner)) : @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # @some : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CDR;        # pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DUP;        # pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CAR;        # timestamp : pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)) : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CDAR;       # int : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DIG 9;      # @parameter%updateResolver : int : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    DUP;        # @parameter%updateResolver : @parameter%updateResolver : int : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    DUG 10;     # @parameter%updateResolver : int : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CDR;        # address : int : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # int : address : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    PAIR;       # pair int address : timestamp : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # timestamp : pair int address : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    PAIR;       # pair timestamp (pair int address) : pair (bool %modified) (pair (string %name) (address %owner)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # pair (bool %modified) (pair (string %name) (address %owner)) : pair timestamp (pair int address) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    PAIR;       # pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SOME;       # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # string : option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver)))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    UPDATE;     # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    PAIR;       # pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # int : pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    PAIR;       # pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # pair (int %maxCommitTime) (int %maxDuration) : pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    PAIR;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : @parameter%updateResolver
                    PAIR;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : @parameter%updateResolver
                    SWAP;       # @parameter%updateResolver : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    # self.data.nameRegistry[params.name].modified = True # @parameter%updateResolver : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    SWAP;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : @parameter%updateResolver
                    DUP;        # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : @parameter%updateResolver
                    CAR;        # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : @parameter%updateResolver
                    SWAP;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CDR;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DUP;        # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CAR;        # pair (int %maxCommitTime) (int %maxDuration) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CDR;        # pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DUP;        # pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CAR;        # int : pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # pair int (pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CDR;        # pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DUP;        # pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CDR;        # mutez : pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    SWAP;       # pair (big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    CAR;        # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DUP;        # big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : @parameter%updateResolver
                    DIG 6;      # @parameter%updateResolver : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    CAR;        # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    DUP;        # string : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    DUG 2;      # string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    GET;        # option (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    IF_SOME
                      {
                        # of_some: set_in_top-any # @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                      }
                      {
                        PUSH string "set_in_top-any"; # string : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                        FAILWITH;   # FAILED
                      }; # @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    DUP;        # @some : @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    CDR;        # pair timestamp (pair int address) : @some : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    SWAP;       # @some : pair timestamp (pair int address) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    CADR;       # pair (string %name) (address %owner) : pair timestamp (pair int address) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    PUSH bool True; # bool : pair (string %name) (address %owner) : pair timestamp (pair int address) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    PAIR;       # pair bool (pair (string %name) (address %owner)) : pair timestamp (pair int address) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    PAIR;       # pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    SOME;       # option (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : string : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    SWAP;       # string : option (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : big_map string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    UPDATE;     # big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address))) : mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    PAIR;       # pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : int : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    SWAP;       # int : pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    PAIR;       # pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair (int %maxCommitTime) (int %maxDuration) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    SWAP;       # pair (int %maxCommitTime) (int %maxDuration) : pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    PAIR;       # pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)) : pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))
                    SWAP;       # pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval)) : pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez))
                    PAIR;       # pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                    NIL operation; # list operation : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
                  }; # list operation : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair (string %name) (address %owner))) (pair timestamp (pair int address)))) mutez)))
              }; # list operation : pair (pair (pair (big_map %addressRegistry address string) (big_map %commitments bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair int (pair (big_map string (pair (pair bool (pair string address)) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) mutez)))
          }; # list operation : @storage
      }; # list operation : pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price))))
    PAIR;       # pair (list operation) (pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))))
  } # pair (list operation) (pair (pair (pair (big_map address string) (big_map bytes timestamp)) (pair (address %domainManager) (int %interval))) (pair (pair (int %maxCommitTime) (int %maxDuration)) (pair (int %minCommitTime) (pair (big_map %nameRegistry string (pair (pair (bool %modified) (pair (string %name) (address %owner))) (pair (timestamp %registeredAt) (pair (int %registrationPeriod) (address %resolver))))) (mutez %price)))))